{"version":3,"sources":["App/AppMenu/index.tsx","api/index.ts","config.ts","hooks/index.ts","App/Step1/Step1Form.tsx","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptionsDropDown.tsx","App/Step2/Step2Form.tsx","App/Step2/Submit.tsx","App/Step2/index.tsx","App/Step3/PegRNAWarnings.jsx","App/Step3/Pe3Warnings.jsx","App/Step3/RTTemplates.tsx","App/Step3/PBSOptions.tsx","App/Step3/PE3BOptions.tsx","App/Step3/PE3Options.tsx","components/Copy.tsx","App/Step3/PegRNA.tsx","App/Step3/Pe3sgRNA.tsx","App/Step3/Pe3bsgRNA.tsx","App/Step3/OutputTabs.tsx","App/Step3/FullResultsButton.tsx","App/Step3/index.tsx","components/StepsProgress.tsx","App/AppSteps/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","backgroundColor","zIndex","marginBottom","Item","name","active","generateTemplateOptions","wtSeq","mut","spacer","pam","minPbs","maxPbs","minRt","maxRt","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","generateSpacers","spacerOptions","generateWarnings","generateCSV","text","responseText","url","window","URL","createObjectURL","Blob","link","document","createElement","id","href","setAttribute","headers","get","appendChild","click","elem","querySelector","parentNode","removeChild","createGlobalState","customSpacer","templateOptions","selectedTemplateOption","selectedSpacerOption","pbsOptions","selectedPbsOption","pe3bOptions","pe3Options","selectedPe3Option","selectedPe3bOption","cleanWtSeq","cleanMutSeq","step","pegRNA","pe3sgRNA","sense","antisense","pe3bsgRNA","warnings","general","pegRna","step2Loading","step3Loading","useGlobalState","getGlobalState","useSequencePredictions","setTemplateOptions","setWtSeq","setMut","setSpacer","setPam","setMinPbs","setMaxPbs","setMinRt","setMaxRt","setPBSOptions","setPe3bOptions","setPe3Options","setPegRNA","setPe3sgRNA","setPe3bsgRNA","setSelectedSpacerOption","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setSelectedPe3bOption","setWarnings","toUpperCase","length","rt","filter","option","type","secondGuide","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","sequence","globalSelectedPe3Option","globalSelectedPe3bOption","sgRNA","updateSelectedTemplateOption","updateSelectedPbsOption","updateSelectedPe3Option","updateSelectedPe3bOption","updateSequencePredictions","useWtSeq","useMut","usePam","useMinPbs","useMaxPbs","useMinRt","useMaxRt","useSpacerOptions","setSpacerOptions","useStep","setStep","useStep3Loading","setStep3Loading","SubmitForm","state","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","parseInt","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Divider","Group","Button","content","loading","primary","onClick","Component","Submit","setCustomSpacer","useCustomSpacer","setStep2Loading","useStep2Loading","customSpacerOption","cutToMut","quality","apiSpacerOptions","finalSpacerOptions","setTimeout","nextStep","getElementById","scrollIntoView","behavior","Step1Form","Step1","height","Grid","Row","Column","width","Segment","color","undefined","SequenceOptionsDropdown","options","_","display","flexDirection","title","Dropdown","map","o","key","selection","scrolling","defaultProps","onChangeFactory","Step2Form","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","Step2","PegRNAWarnings","Message","warning","MessageHeader","i","Pe3Warnings","RTTemplates","PBSOptions","PE3BOptions","PE3Options","Copy","helpText","isOpen","handleCopy","copy","console","log","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","PegRNA","usePegRNA","wordBreak","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","Pe3bsgRNA","setPe3bSgRNA","usePe3bsgRNA","panes","menuItem","textAlign","render","Tab","Pane","OutputTabs","FullResultsButton","onClickFactory","target","block","Steps","Step","ordered","size","completed","Content","Title","Description","AppSteps","borderBottom","justifyContent","StepsProgress","App","centered","Step3","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e3724c2b.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'sticky',\n      top: 0,\n      backgroundColor: '#f3f4f5',\n      zIndex: 2,\n      marginBottom: 0,\n    }}\n  >\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","import { API_ROOT } from '../config';\nimport { SpacerOption } from '../types/presto';\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacers = async (\n  wtSeq: string,\n  mut: string,\n  pam: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/spacers`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer: '',\n      pam,\n    }),\n  });\n  const spacerOptions: SpacerOption[] = await res.json();\n  return spacerOptions;\n};\n\nexport const generateWarnings = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/warnings`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCSV = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/csv`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  const responseText = await res.text();\n  const url = window.URL.createObjectURL(new Blob([responseText]));\n  const link = document.createElement('a');\n  link.id = 'download';\n  link.href = url;\n  link.setAttribute('download', res.headers.get('FileName') || 'presto.csv');\n  document.body.appendChild(link);\n  link.click();\n\n  const elem = document.querySelector('#download');\n\n  if (elem && elem.parentNode) {\n    elem.parentNode.removeChild(elem);\n  }\n};\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n  generateWarnings,\n} from '../api';\nimport { GlobalState, PE3Option } from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  wtSeq: '',\n  mut: '',\n  spacer: '',\n  customSpacer: '',\n  pam: 'NGG',\n  minPbs: 8,\n  maxPbs: 18,\n  minRt: 9,\n  maxRt: 16,\n  templateOptions: [],\n  selectedTemplateOption: null,\n  spacerOptions: [],\n  selectedSpacerOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3bOptions: [],\n  pe3Options: [],\n  selectedPe3Option: null,\n  selectedPe3bOption: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: '',\n  pe3sgRNA: { sense: '', antisense: '' },\n  pe3bsgRNA: { sense: '', antisense: '' },\n  warnings: {\n    general: [],\n    pegRna: [],\n    pe3: [],\n  },\n  step2Loading: false,\n  step3Loading: false,\n};\n\nconst { useGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n  const [mut, setMut] = useGlobalState('mut');\n  const [spacer, setSpacer] = useGlobalState('spacer');\n\n  const [pam, setPam] = useGlobalState('pam');\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n  const [minRt, setMinRt] = useGlobalState('minRt');\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3bOptions, setPe3bOptions] = useGlobalState('pe3bOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [pe3bsgRNA, setPe3bsgRNA] = useGlobalState('pe3bsgRNA');\n  const [selectedSpacerOption, setSelectedSpacerOption] = useGlobalState(\n    'selectedSpacerOption',\n  );\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [selectedPe3bOption, setSelectedPe3bOption] = useGlobalState(\n    'selectedPe3bOption',\n  );\n  const [warnings, setWarnings] = useGlobalState('warnings');\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWarnings(\n      await generateWarnings(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWtSeq(wtSeq.toUpperCase());\n    setMut(mut.toUpperCase());\n    setSpacer(spacer.toUpperCase());\n\n    setPam(pam.toUpperCase());\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0].rt);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0].pbs);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setPe3bOptions(pe3Options.filter((option) => option.type === 'pe3b'));\n    if (getGlobalState('pe3bOptions').length > 0) {\n      setSelectedPe3bOption(getGlobalState('pe3bOptions')[0].secondGuide);\n    }\n    setPe3Options(pe3Options.filter((option) => option.type === 'pe3'));\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0].secondGuide);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const { sequence } = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.toUpperCase(),\n        globalSelectedPbsOption.toUpperCase(),\n      );\n      setPegRNA(sequence);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: string) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: string) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: string) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n  function updateSelectedPe3bOption(option: string) {\n    setSelectedPe3bOption(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    const globalSelectedPe3bOption = getGlobalState('selectedPe3bOption');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3Option.toUpperCase());\n      setPe3sgRNA(sgRNA);\n    }\n    if (globalSelectedPe3bOption) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3bOption.toUpperCase());\n      setPe3bsgRNA(sgRNA);\n    }\n  }\n\n  return {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n    templateOptions,\n    pbsOptions,\n    pe3bOptions,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    pe3bsgRNA,\n    warnings,\n    setSpacer,\n    selectedTemplateOption,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSelectedPe3bOption,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n    selectedSpacerOption,\n    setSelectedSpacerOption,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function useWtSeq() {\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n\n  return {\n    wtSeq,\n    setWtSeq,\n  };\n}\n\nexport function useMut() {\n  const [mut, setMut] = useGlobalState('mut');\n\n  return {\n    mut,\n    setMut,\n  };\n}\n\nexport function useCustomSpacer() {\n  const [customSpacer, setCustomSpacer] = useGlobalState('customSpacer');\n\n  return {\n    customSpacer,\n    setCustomSpacer,\n  };\n}\n\nexport function usePam() {\n  const [pam, setPam] = useGlobalState('pam');\n\n  return {\n    pam,\n    setPam,\n  };\n}\n\nexport function useMinPbs() {\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n\n  return {\n    minPbs,\n    setMinPbs,\n  };\n}\n\nexport function useMaxPbs() {\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n\n  return {\n    maxPbs,\n    setMaxPbs,\n  };\n}\n\nexport function useMinRt() {\n  const [minRt, setMinRt] = useGlobalState('minRt');\n\n  return {\n    minRt,\n    setMinRt,\n  };\n}\n\nexport function useMaxRt() {\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  return {\n    maxRt,\n    setMaxRt,\n  };\n}\n\nexport function useSpacerOptions() {\n  const [spacerOptions, setSpacerOptions] = useGlobalState('spacerOptions');\n\n  return {\n    spacerOptions,\n    setSpacerOptions,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\nexport function usePe3bsgRNA() {\n  const [pe3bsgRNA, setPe3bSgRNA] = useGlobalState('pe3bsgRNA');\n\n  return {\n    pe3bsgRNA,\n    setPe3bSgRNA,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n\nexport function useStep2Loading() {\n  const [step2Loading, setStep2Loading] = useGlobalState('step2Loading');\n  return {\n    step2Loading,\n    setStep2Loading,\n  };\n}\nexport function useStep3Loading() {\n  const [step3Loading, setStep3Loading] = useGlobalState('step3Loading');\n  return {\n    step3Loading,\n    setStep3Loading,\n  };\n}\n","import React, { Component, ChangeEvent, Fragment } from 'react';\nimport { Divider, Form, InputOnChangeData } from 'semantic-ui-react';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  customSpacer: string;\n  pam: string;\n  minPbs: string;\n  maxPbs: string;\n  minRt: string;\n  maxRt: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) => Promise<void>;\n  loading: boolean;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    customSpacer: '',\n    pam: 'NGG',\n    minPbs: '8',\n    maxPbs: '18',\n    minRt: '9',\n    maxRt: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    } = this.state;\n    this.props.onSubmit(\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      parseInt(minPbs),\n      parseInt(maxPbs),\n      parseInt(minRt),\n      parseInt(maxRt),\n    );\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let minRt = 9;\n    let maxRt = 16;\n    if (mutLength > 4) {\n      minRt = mutLength + 6;\n      maxRt = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      minRt = mutLength + 8;\n      maxRt = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      minRt = mutLength + 10;\n      maxRt = mutLength + 30;\n    }\n    this.setState(() => ({ minRt: minRt.toString(), maxRt: maxRt.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minRt,\n      maxRt,\n      minPbs,\n      maxPbs,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          {showAdvanced && (\n            <Fragment>\n              <h3>Advanced Options</h3>\n              <Divider />\n              <Form.Input\n                label=\"Custom PE spacer sequence\"\n                placeholder=\"\"\n                name=\"customSpacer\"\n                value={customSpacer}\n                onChange={this.handleChange}\n              />\n              <Form.Group>\n                <Form.Input\n                  label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                  placeholder=\"NGG\"\n                  name=\"pam\"\n                  value={pam}\n                  onChange={this.handleChange}\n                  required\n                />\n                <Form.Input\n                  label=\"Min PBS length\"\n                  placeholder=\"8\"\n                  name=\"minPbs\"\n                  value={minPbs}\n                  onChange={this.handleChange}\n                  required\n                />\n                <Form.Input\n                  label=\"Max PBS length\"\n                  placeholder=\"18\"\n                  name=\"maxPbs\"\n                  value={maxPbs}\n                  onChange={this.handleChange}\n                  required\n                />\n                <Form.Input\n                  label=\"Min RT length\"\n                  placeholder=\"8\"\n                  name=\"minRt\"\n                  value={minRt}\n                  onChange={this.handleRTChange}\n                  required\n                />\n                <Form.Input\n                  label=\"Max RT length\"\n                  placeholder=\"18\"\n                  name=\"maxRt\"\n                  value={maxRt}\n                  onChange={this.handleRTChange}\n                  required\n                />\n              </Form.Group>\n            </Fragment>\n          )}\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={this.props.loading} primary />\n            <Form.Button\n              content={`${showAdvanced ? 'Hide' : 'Show'} Advanced Options`}\n              onClick={this.handleAdvancedToggle}\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport { generateSpacers } from '../../api';\nimport {\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useCustomSpacer,\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep2Loading,\n} from '../../hooks';\nimport Step1Form from './Step1Form';\n\nconst Submit = () => {\n  const { setSpacer, setSelectedSpacerOption } = useSequencePredictions();\n  const { setWtSeq } = useWtSeq();\n  const { setMut } = useMut();\n  const { setCustomSpacer } = useCustomSpacer();\n  const { setPam } = usePam();\n  const { setMinPbs } = useMinPbs();\n  const { setMaxPbs } = useMaxPbs();\n  const { setMinRt } = useMinRt();\n  const { setMaxRt } = useMaxRt();\n  const { setStep } = useStep();\n  const { spacerOptions, setSpacerOptions } = useSpacerOptions();\n  const { setStep2Loading, step2Loading } = useStep2Loading();\n\n  async function onSubmit(\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setStep2Loading(true);\n    if (customSpacer !== '') {\n      setSpacer(customSpacer.toUpperCase());\n      const customSpacerOption = {\n        spacer: customSpacer.toUpperCase(),\n        cutToMut: null,\n        quality: null,\n      };\n      setSelectedSpacerOption(customSpacerOption);\n      setSpacerOptions([customSpacerOption]);\n    }\n\n    const apiSpacerOptions = await generateSpacers(wtSeq, mut, pam);\n    const finalSpacerOptions = [...spacerOptions, ...apiSpacerOptions];\n    setSpacerOptions(finalSpacerOptions);\n    setSelectedSpacerOption(finalSpacerOptions[0]);\n\n    setWtSeq(wtSeq);\n    setMut(mut);\n    setCustomSpacer(customSpacer);\n    setSpacer(finalSpacerOptions[0].spacer);\n    setPam(pam);\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n    setStep(1);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-2-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep2Loading(false);\n    }, 0);\n  }\n  return <Step1Form onSubmit={onSubmit} loading={step2Loading} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Segment, Grid } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step1 = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <div style={{ height: 40 }}></div>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <div id=\"step-1-container\">\n            <Segment color={step === 0 ? 'grey' : undefined}>\n              <h2>Start</h2>\n              <Submit />\n            </Segment>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\nexport default Step1;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {this.props.title}\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React, { SetStateAction } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport {\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep,\n  useStep3Loading,\n} from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst onChangeFactory = (\n  setSpacer: (u: SetStateAction<string>) => void,\n  setStep: (u: SetStateAction<number>) => void,\n  onSubmit: () => Promise<void>,\n  step: number,\n) => (sequence: string) => {\n  setSpacer(sequence);\n  if (step >= 2) {\n    setStep(1);\n    setTimeout(() => {\n      onSubmit();\n    }, 0);\n  }\n};\n\nconst Step2Form = ({ onSubmit }: Props) => {\n  const { spacerOptions } = useSpacerOptions();\n  const { setSpacer } = useSequencePredictions();\n  const { step3Loading } = useStep3Loading();\n  const { step, setStep } = useStep();\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <SequenceOptionsDropDown\n          title=\"\"\n          options={spacerOptions.map((o) => o.spacer)}\n          onChange={onChangeFactory(setSpacer, setStep, onSubmit, step)}\n        />\n        <div style={{ height: 15 }} />\n        <Form.Button content=\"Next\" loading={step3Loading} primary />\n      </Form>\n    </div>\n  );\n};\n\nexport default Step2Form;\n","import React from 'react';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useStep3Loading,\n} from '../../hooks';\nimport Step2Form from './Step2Form';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  const { wtSeq } = useWtSeq();\n  const { mut } = useMut();\n  const { spacer } = useSequencePredictions();\n  const { pam } = usePam();\n  const { minPbs } = useMinPbs();\n  const { maxPbs } = useMaxPbs();\n  const { minRt } = useMinRt();\n  const { maxRt } = useMaxRt();\n  const { setStep3Loading } = useStep3Loading();\n\n  async function onSubmit() {\n    setStep3Loading(true);\n    getCleanWtSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    getCleanMutSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    await updateSequencePredictions(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setStep(2);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-3-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep3Loading(false);\n    }, 0);\n  }\n  return <Step2Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div id=\"step-2-container\">\n          <Segment color={step === 1 ? 'grey' : undefined}>\n            <h2>Spacer</h2>\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PegRNAWarnings = () => {\n  const {\n    warnings: { general, pegRna },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pegRna];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNAWarnings;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst Pe3Warnings = () => {\n  const {\n    warnings: { general, pe3 },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pe3];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3Warnings;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n  } = useSequencePredictions();\n\n  return (\n    <Fragment>\n      {templateOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"RT templates:\"\n          options={templateOptions.map((option) => option.rt)}\n          onChange={updateSelectedTemplateOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default RTTemplates;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PBSOptions = () => {\n  const { pbsOptions, updateSelectedPbsOption } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pbsOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"Primer binding sites:\"\n          options={pbsOptions.map((option) => option.pbs)}\n          onChange={updateSelectedPbsOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PBSOptions;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3BOptions = () => {\n  const { pe3bOptions, updateSelectedPe3bOption } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3bOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"PE3b Guides:\"\n          options={pe3bOptions.map((option) => option.secondGuide)}\n          onChange={updateSelectedPe3bOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3BOptions;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"PE3 Guides:\"\n          options={pe3Options.map((option) => option.secondGuide)}\n          onChange={updateSelectedPe3Option}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3Options;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    copy(this.props.value);\n    this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n    console.log('indicate');\n    setTimeout(() => {\n      this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n    }, 1000);\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React from 'react';\nimport Copy from '../../components/Copy';\nimport { usePegRNA } from '../../hooks';\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        Final pegRNA:\n        <Copy value={pegRNA} />\n      </div>\n      <p style={{ wordBreak: 'break-word' }}>{pegRNA}</p>\n    </div>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3sgRNA, useSequencePredictions } from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3Options } = useSequencePredictions();\n  const { pe3sgRNA } = usePe3sgRNA();\n\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <Fragment>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                sense sgRNA:\n                <Copy value={pe3sgRNA.sense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.sense}</p>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                antisense sgRNA:\n                <Copy value={pe3sgRNA.antisense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.antisense}</p>\n            </div>\n          </Grid.Column>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3bsgRNA, useSequencePredictions } from '../../hooks';\n\nconst Pe3bsgRNA = () => {\n  const { pe3bOptions } = useSequencePredictions();\n  const { pe3bsgRNA } = usePe3bsgRNA();\n\n  return (\n    <Fragment>\n      {pe3bOptions.length > 0 && (\n        <Fragment>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                sense sgRNA:\n                <Copy value={pe3bsgRNA.sense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.sense}</p>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                antisense sgRNA:\n                <Copy value={pe3bsgRNA.antisense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.antisense}</p>\n            </div>\n          </Grid.Column>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3bsgRNA;\n","import React from 'react';\nimport { Tab, Grid } from 'semantic-ui-react';\nimport PegRNAWarnings from './PegRNAWarnings';\nimport Pe3Warnings from './Pe3Warnings';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport PE3BOptions from './PE3BOptions';\nimport PE3Options from './PE3Options';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\nimport Pe3bsgRNA from './Pe3bsgRNA';\n\nconst panes = [\n  {\n    menuItem: 'pegRNA',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <PegRNAWarnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <RTTemplates />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <PBSOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PegRNA />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Pe3Warnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3Options />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3sgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3b',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Pe3Warnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3BOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3bsgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n];\n\nconst OutputTabs = () => <Tab panes={panes} />;\n\nexport default OutputTabs;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { generateCSV } from '../../api';\nimport { useSequencePredictions } from '../../hooks';\n\nconst FullResultsButton = () => {\n  const {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n  } = useSequencePredictions();\n  const handleClick = () =>\n    generateCSV(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n  return (\n    <Button onClick={handleClick} primary>\n      Donwnload Full Results\n    </Button>\n  );\n};\n\nexport default FullResultsButton;\n","import React, { Fragment } from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport OutputTabs from './OutputTabs';\nimport FullResultsButton from './FullResultsButton';\nimport { useStep } from '../../hooks';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <div id=\"step-3-container\">\n            <Segment color={step === 2 ? 'grey' : undefined}>\n              <h2>pegRNA</h2>\n              <OutputTabs />\n            </Segment>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <FullResultsButton />\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\n\nexport default Step2;\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n};\n\nconst onClickFactory = (step: number) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n  }\n};\n\nconst Steps = ({ step = 0 }: Props) => (\n  <Step.Group ordered size=\"small\">\n    <Step completed={step > 0} active={step === 0} onClick={onClickFactory(1)}>\n      <Step.Content>\n        <Step.Title>Start</Step.Title>\n        <Step.Description>Enter Sequence information</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 1} active={step === 1} onClick={onClickFactory(2)}>\n      <Step.Content>\n        <Step.Title>Spacer</Step.Title>\n        <Step.Description>Select your spacer</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 2} active={step === 2} onClick={onClickFactory(3)}>\n      <Step.Content>\n        <Step.Title>pegRNA</Step.Title>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 3} active={step === 3} onClick={onClickFactory(4)}>\n      <Step.Content>\n        <Step.Title>PE3</Step.Title>\n        <Step.Description>Choose a PE3 sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 4} active={step === 4} onClick={onClickFactory(5)}>\n      <Step.Content>\n        <Step.Title>Cloning</Step.Title>\n        <Step.Description>Choose your cloning strategy</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport StepsProgress from '../../components/StepsProgress';\nimport { useStep } from '../../hooks';\n\nconst AppSteps = () => {\n  const { step } = useStep();\n  return (\n    <div\n      style={{\n        position: 'sticky',\n        top: 40,\n        backgroundColor: 'white',\n        zIndex: 1,\n        borderBottom: '1px solid rgba(34,36,38,.15)',\n      }}\n    >\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <StepsProgress step={step} />\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </div>\n  );\n};\nexport default AppSteps;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <AppMenu />\n      <Steps />\n      <Grid centered>\n        <Step1 />\n        {step >= 1 && <Step2 />}\n        {step >= 2 && <Step3 />}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}