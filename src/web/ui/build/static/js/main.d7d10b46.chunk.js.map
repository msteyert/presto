{"version":3,"sources":["App/AppMenu/index.tsx","api/index.ts","config.ts","hooks/index.ts","components/SubmitForm.tsx","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptions.tsx","App/Step2/RTTemplates.tsx","App/Step2/PBSOptions.tsx","App/Step2/OutputTabs.tsx","App/Step2/SequenceViewer.tsx","App/Step2/index.tsx","components/StepsProgress.tsx","App/AppSteps/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","backgroundColor","zIndex","Item","name","active","generateTemplateOptions","wtSeq","mut","spacer","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generateMutSeq","generateCleanWtSeq","useGlobalState","createGlobalState","templateOptions","pbsOptions","cleanWtSeq","cleanMutSeq","step","useSequencePredictions","setTemplateOptions","setPBSOptions","generateSequencePredictions","useCleanWtSeq","setCleanWtSeq","sequence","getCleanWtSeq","useCleanMutSeq","setCleanMutSeq","getCleanMutSeq","useStep","setStep","SubmitForm","state","handleChange","e","value","setState","handleSubmit","props","onSubmit","this","Form","Input","label","placeholder","onChange","required","Group","Button","content","primary","Component","Submit","Step1","Grid","Row","Column","width","SequenceOptions","options","length","textAlign","Field","title","map","option","Radio","toggle","checked","defaultProps","RTTemplates","rt","PBSOptions","pbs","panes","menuItem","render","Tab","Pane","height","OutputTabs","SequenceViewer","Segment","seq","viewer","zoom","linear","Step2","Steps","Step","ordered","size","completed","Content","Title","Description","AppSteps","display","justifyContent","StepsProgress","App","centered","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7d10b46.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'sticky',\n      top: 0,\n      backgroundColor: 'white',\n      zIndex: 1,\n    }}\n  >\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","import { API_ROOT } from '../config';\nexport const generate = async (wtSeq: string, mut: string, spacer: string) => {\n  const res = await fetch(`${API_ROOT}/generate`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  const text = await res.text();\n  return text;\n};\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n} from '../api';\nimport { GlobalState } from '../types/peggy';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  templateOptions: [],\n  pbsOptions: [],\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n};\nconst { useGlobalState } = createGlobalState(initialState);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n\n  async function generateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n  ) {\n    setTemplateOptions(await generateTemplateOptions(wtSeq, mut, spacer));\n    setPBSOptions(await generatePrimerBindingSiteOptions(wtSeq, mut, spacer));\n  }\n\n  return {\n    templateOptions,\n    pbsOptions,\n    generateSequencePredictions,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(wtSeq: string, mut: string, spacer: string) {\n    const { sequence } = await generateCleanWtSeq(wtSeq, mut, spacer);\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(wtSeq: string, mut: string, spacer: string) {\n    const { sequence } = await generateMutSeq(wtSeq, mut, spacer);\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n","import React, { Component, ChangeEvent } from 'react';\nimport { Form, InputOnChangeData } from 'semantic-ui-react';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  spacer: string;\n};\ntype Props = {\n  onSubmit: (wtSeq: string, mut: string, spacer: string) => Promise<void>;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = { wtSeq: '', mut: '', spacer: '' };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState({\n      ...this.state,\n      [name]: value,\n    });\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const { wtSeq, mut, spacer } = this.state;\n    this.props.onSubmit(wtSeq, mut, spacer);\n  };\n\n  render() {\n    const { wtSeq, mut, spacer } = this.state;\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            label=\"PE spacer sequence\"\n            placeholder=\"\"\n            name=\"spacer\"\n            value={spacer}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Group>\n            <Form.Button content=\"Show Advanced Options\" />\n            <Form.Button content=\"Submit\" primary />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n} from '../../hooks';\nimport SubmitForm from '../../components/SubmitForm';\n\nconst Submit = () => {\n  const { generateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  async function onSubmit(wtSeq: string, mut: string, spacer: string) {\n    getCleanWtSeq(wtSeq, mut, spacer);\n    getCleanMutSeq(wtSeq, mut, spacer);\n    await generateSequencePredictions(wtSeq, mut, spacer);\n    setStep(1);\n  }\n  return <SubmitForm onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Submit from './Submit';\n\ntype Props = {\n  onSubmit: (wtSeq: string, mut: string, spacer: string) => Promise<void>;\n};\n\nconst Step1 = () => (\n  <Grid.Row>\n    <Grid.Column width={14}>\n      <Submit />\n    </Grid.Column>\n  </Grid.Row>\n);\nexport default Step1;\n","import React, { Component, FormEvent } from 'react';\nimport { Form, Radio, FormCheckboxProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n};\n\nexport default class SequenceOptions extends Component<Props> {\n  state = { value: this.props.options.length > 0 ? this.props.options[0] : '' };\n  static defaultProps = { options: [] };\n  handleChange = (\n    e: FormEvent<HTMLInputElement>,\n    { value }: FormCheckboxProps,\n  ) => this.setState({ value });\n\n  render() {\n    return (\n      <div style={{ textAlign: 'left' }}>\n        <Form>\n          <Form.Field>{this.props.title}</Form.Field>\n          {this.props.options.map((option) => (\n            <Form.Field>\n              <Radio\n                toggle\n                label={option}\n                name={option}\n                value={option}\n                checked={this.state.value === option}\n                onChange={this.handleChange}\n              />\n            </Form.Field>\n          ))}\n        </Form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SequenceOptions from '../../components/SequenceOptions';\nimport { useSequencePredictions } from '../../hooks';\n\nconst RTTemplates = () => {\n  const { templateOptions } = useSequencePredictions();\n  return (\n    <SequenceOptions\n      title=\"RT templates:\"\n      options={templateOptions.map((option) => option.rt)}\n    />\n  );\n};\n\nexport default RTTemplates;\n","import React from 'react';\nimport SequenceOptions from '../../components/SequenceOptions';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PBSOptions = () => {\n  const { pbsOptions } = useSequencePredictions();\n  return (\n    <SequenceOptions\n      title=\"Primer binding sites:\"\n      options={pbsOptions.map((option) => option.pbs)}\n    />\n  );\n};\n\nexport default PBSOptions;\n","import React from 'react';\nimport { Tab, Grid } from 'semantic-ui-react';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\n\nconst panes = [\n  {\n    menuItem: 'pegRNA',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Grid.Column width={5}>\n          <RTTemplates />\n          <div style={{ height: '20px' }} />\n          <PBSOptions />\n        </Grid.Column>\n      </Tab.Pane>\n    ),\n  },\n  { menuItem: 'PE3', render: () => <Tab.Pane>Tab 2 Content</Tab.Pane> },\n];\n\nconst OutputTabs = () => <Tab panes={panes} />;\n\nexport default OutputTabs;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { SeqViz } from 'seqviz';\nimport { useCleanWtSeq, useCleanMutSeq } from '../../hooks';\n\nconst SequenceViewer = () => {\n  const { cleanWtSeq } = useCleanWtSeq();\n  const { cleanMutSeq } = useCleanMutSeq();\n  return (\n    <Segment>\n      <Grid.Row>\n        <p>Wildtype sequence</p>\n        <div style={{ height: '120px', width: '100%' }}>\n          <SeqViz\n            name=\"J23100\"\n            seq={cleanWtSeq}\n            viewer=\"linear\"\n            zoom={{\n              linear: 30,\n            }}\n          />\n        </div>\n      </Grid.Row>\n      <Grid.Row>\n        <p>Mutant sequence</p>\n        <div style={{ height: '120px', width: '100%' }}>\n          <SeqViz\n            name=\"J23100\"\n            seq={cleanMutSeq}\n            viewer=\"linear\"\n            zoom={{\n              linear: 30,\n            }}\n          />\n        </div>\n      </Grid.Row>\n    </Segment>\n  );\n};\n\nexport default SequenceViewer;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport OutputTabs from './OutputTabs';\nimport SequenceViewer from './SequenceViewer';\n\nconst Step2 = () => {\n  return (\n    <Grid.Row>\n      <OutputTabs />\n      <Grid.Column width={9}>\n        <SequenceViewer />\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default Step2;\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n};\n\nconst Steps = ({ step = 0 }: Props) => (\n  <Step.Group ordered size=\"small\">\n    <Step completed={step > 0} active={step === 0}>\n      <Step.Content>\n        <Step.Title>Enter</Step.Title>\n        <Step.Description>Enter Sequence information</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 1} active={step === 1}>\n      <Step.Content>\n        <Step.Title>Design</Step.Title>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 2} active={step === 2}>\n      <Step.Content>\n        <Step.Title>Build</Step.Title>\n        <Step.Description>Build cloning constructs</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport StepsProgress from '../../components/StepsProgress';\nimport { useStep } from '../../hooks';\n\nconst AppSteps = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <StepsProgress step={step} />\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default AppSteps;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <AppMenu />\n      <Grid centered>\n        <Steps />\n        {step === 0 && <Step1 />}\n        {step === 1 && <Step2 />}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}