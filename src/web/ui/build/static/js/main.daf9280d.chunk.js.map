{"version":3,"sources":["App/AppMenu/index.tsx","api/index.ts","config.ts","hooks/index.ts","components/SubmitForm.tsx","App/Step1/Submit.tsx","App/Step1/index.tsx","App/Step2/PegRNAWarnings.jsx","App/Step2/Pe3Warnings.jsx","components/SequenceOptionsDropDown.tsx","App/Step2/RTTemplates.tsx","App/Step2/PBSOptions.tsx","App/Step2/PE3BOptions.tsx","App/Step2/PE3Options.tsx","components/Copy.tsx","App/Step2/PegRNA.tsx","App/Step2/Pe3sgRNA.tsx","App/Step2/Pe3bsgRNA.tsx","App/Step2/OutputTabs.tsx","App/Step2/FullResultsButton.tsx","App/Step2/index.tsx","components/StepsProgress.tsx","App/AppSteps/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","backgroundColor","zIndex","Item","name","active","generateTemplateOptions","wtSeq","mut","spacer","pam","minPbs","maxPbs","minRt","maxRt","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","generateWarnings","generateCSV","text","responseText","url","window","URL","createObjectURL","Blob","link","document","createElement","id","href","setAttribute","headers","get","appendChild","click","elem","querySelector","parentNode","removeChild","createGlobalState","templateOptions","selectedTemplateOption","pbsOptions","selectedPbsOption","pe3bOptions","pe3Options","selectedPe3Option","selectedPe3bOption","cleanWtSeq","cleanMutSeq","step","pegRNA","pe3sgRNA","sense","antisense","pe3bsgRNA","warnings","general","pegRna","useGlobalState","getGlobalState","useSequencePredictions","setTemplateOptions","setWtSeq","setMut","setSpacer","setPam","setMinPbs","setMaxPbs","setMinRt","setMaxRt","setPBSOptions","setPe3bOptions","setPe3Options","setPegRNA","setPe3sgRNA","setPe3bsgRNA","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setSelectedPe3bOption","setWarnings","toUpperCase","length","rt","filter","option","type","secondGuide","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","sequence","globalSelectedPe3Option","globalSelectedPe3bOption","sgRNA","updateSelectedTemplateOption","updateSelectedPbsOption","updateSelectedPe3Option","updateSelectedPe3bOption","updateSequencePredictions","useStep","setStep","SubmitForm","state","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","parseInt","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Group","Button","content","onClick","primary","Component","Submit","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","Step1","Grid","Row","Column","width","PegRNAWarnings","Message","warning","MessageHeader","map","i","key","Pe3Warnings","SequenceOptionsDropdown","options","_","display","flexDirection","title","Dropdown","o","selection","scrolling","defaultProps","RTTemplates","PBSOptions","PE3BOptions","PE3Options","Copy","helpText","isOpen","handleCopy","copy","console","log","setTimeout","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","PegRNA","usePegRNA","wordBreak","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","Pe3bsgRNA","setPe3bSgRNA","usePe3bsgRNA","panes","menuItem","textAlign","render","Tab","Pane","OutputTabs","FullResultsButton","Step2","Steps","Step","ordered","size","completed","Content","Title","Description","AppSteps","justifyContent","StepsProgress","App","centered","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.daf9280d.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'sticky',\n      top: 0,\n      backgroundColor: 'white',\n      zIndex: 1,\n    }}\n  >\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","import { API_ROOT } from '../config';\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n\nexport const generateWarnings = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/warnings`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCSV = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/csv`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  const responseText = await res.text();\n  const url = window.URL.createObjectURL(new Blob([responseText]));\n  const link = document.createElement('a');\n  link.id = 'download';\n  link.href = url;\n  link.setAttribute('download', res.headers.get('FileName') || 'presto.csv');\n  document.body.appendChild(link);\n  link.click();\n\n  const elem = document.querySelector('#download');\n\n  if (elem && elem.parentNode) {\n    elem.parentNode.removeChild(elem);\n  }\n};\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n  generateWarnings,\n} from '../api';\nimport { GlobalState, PE3Option } from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  wtSeq: '',\n  mut: '',\n  spacer: '',\n  pam: 'NGG',\n  minPbs: 8,\n  maxPbs: 18,\n  minRt: 9,\n  maxRt: 16,\n  templateOptions: [],\n  selectedTemplateOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3bOptions: [],\n  pe3Options: [],\n  selectedPe3Option: null,\n  selectedPe3bOption: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: '',\n  pe3sgRNA: { sense: '', antisense: '' },\n  pe3bsgRNA: { sense: '', antisense: '' },\n  warnings: {\n    general: [],\n    pegRna: [],\n    pe3: [],\n  },\n};\n\nconst { useGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n  const [mut, setMut] = useGlobalState('mut');\n  const [spacer, setSpacer] = useGlobalState('spacer');\n\n  const [pam, setPam] = useGlobalState('pam');\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n  const [minRt, setMinRt] = useGlobalState('minRt');\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3bOptions, setPe3bOptions] = useGlobalState('pe3bOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [pe3bsgRNA, setPe3bsgRNA] = useGlobalState('pe3bsgRNA');\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [selectedPe3bOption, setSelectedPe3bOption] = useGlobalState(\n    'selectedPe3bOption',\n  );\n  const [warnings, setWarnings] = useGlobalState('warnings');\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWarnings(\n      await generateWarnings(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWtSeq(wtSeq.toUpperCase());\n    setMut(mut.toUpperCase());\n    setSpacer(spacer.toUpperCase());\n\n    setPam(pam.toUpperCase());\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0].rt);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0].pbs);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setPe3bOptions(pe3Options.filter((option) => option.type === 'pe3b'));\n    if (getGlobalState('pe3bOptions').length > 0) {\n      setSelectedPe3bOption(getGlobalState('pe3bOptions')[0].secondGuide);\n    }\n    setPe3Options(pe3Options.filter((option) => option.type === 'pe3'));\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0].secondGuide);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const { sequence } = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.toUpperCase(),\n        globalSelectedPbsOption.toUpperCase(),\n      );\n      setPegRNA(sequence);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: string) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: string) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: string) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n  function updateSelectedPe3bOption(option: string) {\n    setSelectedPe3bOption(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    const globalSelectedPe3bOption = getGlobalState('selectedPe3bOption');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3Option.toUpperCase());\n      setPe3sgRNA(sgRNA);\n    }\n    if (globalSelectedPe3bOption) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3bOption.toUpperCase());\n      setPe3bsgRNA(sgRNA);\n    }\n  }\n\n  return {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n    templateOptions,\n    pbsOptions,\n    pe3bOptions,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    pe3bsgRNA,\n    warnings,\n    setSpacer,\n    selectedTemplateOption,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSelectedPe3bOption,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\nexport function usePe3bsgRNA() {\n  const [pe3bsgRNA, setPe3bSgRNA] = useGlobalState('pe3bsgRNA');\n\n  return {\n    pe3bsgRNA,\n    setPe3bSgRNA,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n","import React, { Component, ChangeEvent } from 'react';\nimport { Form, InputOnChangeData } from 'semantic-ui-react';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  spacer: string;\n  pam: string;\n  minPbs: string;\n  maxPbs: string;\n  minRt: string;\n  maxRt: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) => Promise<void>;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    spacer: '',\n    pam: 'NGG',\n    minPbs: '8',\n    maxPbs: '18',\n    minRt: '9',\n    maxRt: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const {\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    } = this.state;\n    this.props.onSubmit(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      parseInt(minPbs),\n      parseInt(maxPbs),\n      parseInt(minRt),\n      parseInt(maxRt),\n    );\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let minRt = 9;\n    let maxRt = 16;\n    if (mutLength > 4) {\n      minRt = mutLength + 6;\n      maxRt = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      minRt = mutLength + 8;\n      maxRt = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      minRt = mutLength + 10;\n      maxRt = mutLength + 30;\n    }\n    this.setState(() => ({ minRt: minRt.toString(), maxRt: maxRt.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minRt,\n      maxRt,\n      minPbs,\n      maxPbs,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            label=\"PE spacer sequence\"\n            placeholder=\"\"\n            name=\"spacer\"\n            value={spacer}\n            onChange={this.handleChange}\n            required\n          />\n          {showAdvanced && (\n            <Form.Group>\n              <Form.Input\n                label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                placeholder=\"NGG\"\n                name=\"pam\"\n                value={pam}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Min PBS length\"\n                placeholder=\"8\"\n                name=\"minPbs\"\n                value={minPbs}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Max PBS length\"\n                placeholder=\"18\"\n                name=\"maxPbs\"\n                value={maxPbs}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Min RT length\"\n                placeholder=\"8\"\n                name=\"minRt\"\n                value={minRt}\n                onChange={this.handleRTChange}\n                required\n              />\n              <Form.Input\n                label=\"Max RT length\"\n                placeholder=\"18\"\n                name=\"maxRt\"\n                value={maxRt}\n                onChange={this.handleRTChange}\n                required\n              />\n            </Form.Group>\n          )}\n          <Form.Group>\n            <Form.Button\n              content=\"Show Advanced Options\"\n              onClick={this.handleAdvancedToggle}\n            />\n            <Form.Button content=\"Submit\" primary />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n} from '../../hooks';\nimport SubmitForm from '../../components/SubmitForm';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  async function onSubmit(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    getCleanWtSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    getCleanMutSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    await updateSequencePredictions(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setStep(1);\n  }\n  return <SubmitForm onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Submit from './Submit';\n\nconst Step1 = () => (\n  <Grid.Row>\n    <Grid.Column width={14}>\n      <Submit />\n    </Grid.Column>\n  </Grid.Row>\n);\nexport default Step1;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PegRNAWarnings = () => {\n  const {\n    warnings: { general, pegRna },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pegRna];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNAWarnings;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst Pe3Warnings = () => {\n  const {\n    warnings: { general, pe3 },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pe3];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3Warnings;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {this.props.title}\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n  } = useSequencePredictions();\n\n  return (\n    <Fragment>\n      {templateOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"RT templates:\"\n          options={templateOptions.map((option) => option.rt)}\n          onChange={updateSelectedTemplateOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default RTTemplates;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PBSOptions = () => {\n  const { pbsOptions, updateSelectedPbsOption } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pbsOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"Primer binding sites:\"\n          options={pbsOptions.map((option) => option.pbs)}\n          onChange={updateSelectedPbsOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PBSOptions;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3BOptions = () => {\n  const { pe3bOptions, updateSelectedPe3bOption } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3bOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"PE3b Guides:\"\n          options={pe3bOptions.map((option) => option.secondGuide)}\n          onChange={updateSelectedPe3bOption}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3BOptions;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"PE3 Guides:\"\n          options={pe3Options.map((option) => option.secondGuide)}\n          onChange={updateSelectedPe3Option}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3Options;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    copy(this.props.value);\n    this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n    console.log('indicate');\n    setTimeout(() => {\n      this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n    }, 1000);\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React from 'react';\nimport Copy from '../../components/Copy';\nimport { usePegRNA } from '../../hooks';\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        Final pegRNA:\n        <Copy value={pegRNA} />\n      </div>\n      <p style={{ wordBreak: 'break-word' }}>{pegRNA}</p>\n    </div>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3sgRNA, useSequencePredictions } from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3Options } = useSequencePredictions();\n  const { pe3sgRNA } = usePe3sgRNA();\n\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <Fragment>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                sense sgRNA:\n                <Copy value={pe3sgRNA.sense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.sense}</p>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                antisense sgRNA:\n                <Copy value={pe3sgRNA.antisense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.antisense}</p>\n            </div>\n          </Grid.Column>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3bsgRNA, useSequencePredictions } from '../../hooks';\n\nconst Pe3bsgRNA = () => {\n  const { pe3bOptions } = useSequencePredictions();\n  const { pe3bsgRNA } = usePe3bsgRNA();\n\n  return (\n    <Fragment>\n      {pe3bOptions.length > 0 && (\n        <Fragment>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                sense sgRNA:\n                <Copy value={pe3bsgRNA.sense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.sense}</p>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                antisense sgRNA:\n                <Copy value={pe3bsgRNA.antisense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.antisense}</p>\n            </div>\n          </Grid.Column>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3bsgRNA;\n","import React from 'react';\nimport { Tab, Grid } from 'semantic-ui-react';\nimport PegRNAWarnings from './PegRNAWarnings';\nimport Pe3Warnings from './Pe3Warnings';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport PE3BOptions from './PE3BOptions';\nimport PE3Options from './PE3Options';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\nimport Pe3bsgRNA from './Pe3bsgRNA';\n\nconst panes = [\n  {\n    menuItem: 'pegRNA',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <PegRNAWarnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <RTTemplates />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <PBSOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PegRNA />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Pe3Warnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3Options />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3sgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3b',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Pe3Warnings />\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3BOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3bsgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n];\n\nconst OutputTabs = () => <Tab panes={panes} />;\n\nexport default OutputTabs;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { generateCSV } from '../../api';\nimport { useSequencePredictions } from '../../hooks';\n\nconst FullResultsButton = () => {\n  const {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n  } = useSequencePredictions();\n  const handleClick = () =>\n    generateCSV(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n  return (\n    <Button onClick={handleClick} primary>\n      Donwnload Full Results\n    </Button>\n  );\n};\n\nexport default FullResultsButton;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport OutputTabs from './OutputTabs';\nimport FullResultsButton from './FullResultsButton';\n\nconst Step2 = () => {\n  return (\n    <Fragment>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <OutputTabs />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <FullResultsButton />\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\n\nexport default Step2;\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n};\n\nconst Steps = ({ step = 0 }: Props) => (\n  <Step.Group ordered size=\"small\">\n    <Step completed={step > 0} active={step === 0}>\n      <Step.Content>\n        <Step.Title>Enter</Step.Title>\n        <Step.Description>Enter Sequence information</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 1} active={step === 1}>\n      <Step.Content>\n        <Step.Title>Design</Step.Title>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport StepsProgress from '../../components/StepsProgress';\nimport { useStep } from '../../hooks';\n\nconst AppSteps = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <StepsProgress step={step} />\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default AppSteps;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <AppMenu />\n      <Grid centered>\n        <Steps />\n        <Step1 />\n        {step === 1 && <Step2 />}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}