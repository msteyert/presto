{"version":3,"sources":["App/AppMenu/index.tsx","config.ts","api/index.ts","hooks/index.ts","components/StepsProgress.tsx","App/SideMenu/index.tsx","App/Step1/SpacerError.jsx","App/Step1/Step1Form.tsx","api/events.ts","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptionsDropDown.tsx","App/Step2/Step2Form.tsx","App/Step2/Submit.tsx","App/Step2/index.tsx","App/Step3/Statistic.tsx","App/Step3/RTTemplates.tsx","App/Step3/PBSOptions.tsx","App/Step3/Step3Form.tsx","App/Step3/Submit.tsx","App/Step3/PegRNAWarnings.jsx","App/Step3/index.tsx","App/Step4/PE3Options.tsx","App/Step4/Step4Form.tsx","App/Step4/Submit.tsx","App/Step4/Pe3Warnings.jsx","App/Step4/index.tsx","App/Step5/FullResultsButton.tsx","components/Copy.tsx","App/Step5/CloningStrategyDropdown.tsx","App/Step5/PegRNA.tsx","App/Step5/Pe3sgRNA.tsx","App/Step5/SpacersgRNA.tsx","App/Step5/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","left","width","backgroundColor","zIndex","marginBottom","alt","src","height","Item","name","active","mixpanel","init","generateTemplateOptions","wtSeq","mut","spacer","pam","minPbs","maxPbs","minRt","maxRt","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","generateSpacerSgRNA","generateSpacers","spacerOptions","generateWarnings","generateCSV","text","responseText","url","window","URL","createObjectURL","Blob","link","document","createElement","id","href","setAttribute","headers","get","appendChild","click","elem","querySelector","parentNode","removeChild","trackEvent","event","track","getGlobalState","customSpacer","selectedTemplateOption","rt","selectedSpacerOption","selectedPbsOption","selectedPe3Option","secondGuide","selectedPe3OptionType","type","cleanWtSeq","cleanMutSeq","pegRNA","sequence","pe3sgRNASense","sense","pe3sgRNAAntiSense","antisense","createGlobalState","templateOptions","pbsOptions","pe3Options","step","pe3sgRNA","spacersgRNA","warnings","general","pegRna","spacerError","step2Loading","step3Loading","step4Loading","step5Loading","cloningStrategy","step3Advanced","useGlobalState","useSequencePredictions","setTemplateOptions","setWtSeq","setMut","setSpacer","setPam","setMinPbs","setMaxPbs","setMinRt","setMaxRt","setPBSOptions","setPe3Options","setPegRNA","setPe3sgRNA","setSpacersgRNA","setSelectedSpacerOption","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setWarnings","toUpperCase","length","pamStart","cutPE3","cutDiff","rcSecondGuide","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","globalSelectedPe3Option","sgRNA","updateSelectedTemplateOption","option","updateSelectedPbsOption","updateSelectedPe3Option","updateSequencePredictions","useWtSeq","useMut","usePam","useMinPbs","useMaxPbs","useMinRt","useMaxRt","useSpacerOptions","setSpacerOptions","useSpacerError","setSpacerError","useStep","setStep","useStep3Loading","setStep3Loading","useStep4Loading","setStep4Loading","useStep5Loading","setStep5Loading","useCloningStrategy","setCloningStrategy","useStep3Advanced","setStep3Advanced","onClickFactory","target","getElementById","scrollIntoView","block","behavior","Steps","vertical","Step","Group","ordered","size","completed","onClick","Content","Description","disabled","SideMenu","className","display","justifyContent","paddingLeft","StepsProgress","SpacerError","Message","warning","MessageHeader","SubmitForm","state","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","parseInt","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Divider","Button","content","loading","primary","basic","Component","submit","Submit","setCustomSpacer","useCustomSpacer","setStep2Loading","useStep2Loading","finalSpacerOptions","customSpacerOption","cutToMut","quality","apiSpacerOptions","Events","setTimeout","nextStep","Step1Form","Step1","Grid","Row","Column","Segment","color","undefined","SequenceOptionsDropdown","options","_","title","Dropdown","map","o","key","selection","scrolling","defaultProps","onChangeFactory","Step2Form","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","events","Step2","Statistic","margin","renderValue","find","t","RTTemplates","fhr","fhrGC","fhrLength","rtLength","rtPolyT","rtTM","PbsOptions","p","PBSOptions","pbsGC","pbsPolyT","pbsTM","handleAdvancedToggleFactory","Step3Form","flexGrow","paddingRight","PegRNAWarnings","i","PE3OptionsDropdownAvatar","selectedOption","filter","image","PE3Options","Step4Form","Pe3Warnings","FullResultsButton","Copy","helpText","isOpen","handleCopy","copy","console","log","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","handleChangeFactory","CloningStrategyDropdown","defaultValue","getSequence","annotations","join","getCloningStrategyAnnotations","includes","PegRNA","usePegRNA","seen","Set","item","k","has","add","uniqBy","marginTop","flexDirection","right","annotation","borderRadius","marginLeft","marginRight","wordBreak","padding","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","SpacersgRNA","Step5","App","overflow","centered","Step3","Step4","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5aebd2cd.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { API_ROOT } from '../../config';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      backgroundColor: '#f3f4f5',\n      zIndex: 2,\n      marginBottom: 0,\n    }}\n  >\n    <img\n      alt=\"PegAssist Logo\"\n      src={`${API_ROOT}/icon/apple-icon.png`}\n      style={{ height: 50 }}\n    />\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n\nexport const MIXPANEL_KEY = \"05822e9dadcdca6fdf3c42405905bb0e\";","import { API_ROOT, MIXPANEL_KEY } from '../config';\nimport { SpacerOption } from '../types/presto';\nimport mixpanel from 'mixpanel-browser';\nimport { getGlobalState } from '../hooks';\nmixpanel.init(MIXPANEL_KEY);\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacerSgRNA = async (spacer: string) => {\n  const res = await fetch(`${API_ROOT}/generate/spacer_sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, wtSeq: '', mut: '' }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacers = async (\n  wtSeq: string,\n  mut: string,\n  pam: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/spacers`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer: '',\n      pam,\n    }),\n  });\n  const spacerOptions: SpacerOption[] = await res.json();\n  return spacerOptions;\n};\n\nexport const generateWarnings = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/warnings`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCSV = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/csv`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  const responseText = await res.text();\n  const url = window.URL.createObjectURL(new Blob([responseText]));\n  const link = document.createElement('a');\n  link.id = 'download';\n  link.href = url;\n  link.setAttribute('download', res.headers.get('FileName') || 'presto.csv');\n  document.body.appendChild(link);\n  link.click();\n\n  const elem = document.querySelector('#download');\n\n  if (elem && elem.parentNode) {\n    elem.parentNode.removeChild(elem);\n  }\n};\n\nexport const trackEvent = (event: string) => {\n  mixpanel.track(event, {\n    wtSeq: getGlobalState('wtSeq'),\n    mut: getGlobalState('mut'),\n    spacer: getGlobalState('spacer'),\n    customSpacer: getGlobalState('customSpacer'),\n    pam: getGlobalState('pam'),\n    minPbs: getGlobalState('minPbs'),\n    maxPbs: getGlobalState('maxPbs'),\n    minRt: getGlobalState('minRt'),\n    maxRt: getGlobalState('maxRt'),\n    selectedTemplateOption: getGlobalState('selectedTemplateOption')?.rt,\n    selectedSpacerOption: getGlobalState('selectedSpacerOption')?.spacer,\n    selectedPbsOption: getGlobalState('selectedPbsOption')?.pbs,\n    selectedPe3Option: getGlobalState('selectedPe3Option')?.secondGuide,\n    selectedPe3OptionType: getGlobalState('selectedPe3Option')?.type,\n    cleanWtSeq: getGlobalState('cleanWtSeq'),\n    cleanMutSeq: getGlobalState('cleanMutSeq'),\n    pegRNA: getGlobalState('pegRNA')?.sequence,\n    pe3sgRNASense: getGlobalState('pe3sgRNA')?.sense,\n    pe3sgRNAAntiSense: getGlobalState('pe3sgRNA')?.antisense,\n  });\n};\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n  generateSpacerSgRNA,\n  generateWarnings,\n} from '../api';\nimport {\n  GlobalState,\n  PBSOption,\n  PE3Option,\n  TemplateOption,\n} from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  wtSeq: '',\n  mut: '',\n  spacer: '',\n  customSpacer: '',\n  pam: 'NGG',\n  minPbs: 8,\n  maxPbs: 18,\n  minRt: 9,\n  maxRt: 16,\n  templateOptions: [],\n  selectedTemplateOption: null,\n  spacerOptions: [],\n  selectedSpacerOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3Options: [],\n  selectedPe3Option: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: null,\n  pe3sgRNA: { sense: '', antisense: '' },\n  spacersgRNA: { sense: '', antisense: '' },\n  warnings: {\n    general: [],\n    pegRna: [],\n    pe3: [],\n  },\n  spacerError: false,\n  step2Loading: false,\n  step3Loading: false,\n  step4Loading: false,\n  step5Loading: false,\n  cloningStrategy: 'Richardson & Steyert et al. 2021',\n  step3Advanced: false,\n};\n\nexport const { useGlobalState, getGlobalState } = createGlobalState(\n  initialState,\n);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n  const [mut, setMut] = useGlobalState('mut');\n  const [spacer, setSpacer] = useGlobalState('spacer');\n\n  const [pam, setPam] = useGlobalState('pam');\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n  const [minRt, setMinRt] = useGlobalState('minRt');\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [spacersgRNA, setSpacersgRNA] = useGlobalState('spacersgRNA');\n  const [selectedSpacerOption, setSelectedSpacerOption] = useGlobalState(\n    'selectedSpacerOption',\n  );\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [warnings, setWarnings] = useGlobalState('warnings');\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWarnings(\n      await generateWarnings(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWtSeq(wtSeq.toUpperCase());\n    setMut(mut.toUpperCase());\n    setSpacer(spacer.toUpperCase());\n\n    setPam(pam.toUpperCase());\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0]);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0]);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setPe3Options([\n      ...pe3Options,\n      {\n        pamStart: 0,\n        cutPE3: 0,\n        cutDiff: 0,\n        secondGuide: 'None',\n        rcSecondGuide: 'None',\n        type: 'None',\n      },\n    ]);\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0]);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const pegRNA = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.rt.toUpperCase(),\n        globalSelectedPbsOption.pbs.toUpperCase(),\n      );\n      setPegRNA(pegRNA);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: TemplateOption) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: PBSOption) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: PE3Option) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    const globalSpacer = getGlobalState('spacer');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(\n        globalSelectedPe3Option.secondGuide.toUpperCase(),\n      );\n      setPe3sgRNA(sgRNA);\n    }\n\n    const spacersgRNA = await generateSpacerSgRNA(globalSpacer);\n    setSpacersgRNA(spacersgRNA);\n  }\n\n  return {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n    templateOptions,\n    pbsOptions,\n    selectedPbsOption,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    spacersgRNA,\n    warnings,\n    setSpacer,\n    selectedTemplateOption,\n    selectedPe3Option,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n    selectedSpacerOption,\n    setSelectedSpacerOption,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function useWtSeq() {\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n\n  return {\n    wtSeq,\n    setWtSeq,\n  };\n}\n\nexport function useMut() {\n  const [mut, setMut] = useGlobalState('mut');\n\n  return {\n    mut,\n    setMut,\n  };\n}\n\nexport function useCustomSpacer() {\n  const [customSpacer, setCustomSpacer] = useGlobalState('customSpacer');\n\n  return {\n    customSpacer,\n    setCustomSpacer,\n  };\n}\n\nexport function usePam() {\n  const [pam, setPam] = useGlobalState('pam');\n\n  return {\n    pam,\n    setPam,\n  };\n}\n\nexport function useMinPbs() {\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n\n  return {\n    minPbs,\n    setMinPbs,\n  };\n}\n\nexport function useMaxPbs() {\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n\n  return {\n    maxPbs,\n    setMaxPbs,\n  };\n}\n\nexport function useMinRt() {\n  const [minRt, setMinRt] = useGlobalState('minRt');\n\n  return {\n    minRt,\n    setMinRt,\n  };\n}\n\nexport function useMaxRt() {\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  return {\n    maxRt,\n    setMaxRt,\n  };\n}\n\nexport function useSpacerOptions() {\n  const [spacerOptions, setSpacerOptions] = useGlobalState('spacerOptions');\n\n  return {\n    spacerOptions,\n    setSpacerOptions,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\n\nexport function useSpacerError() {\n  const [spacerError, setSpacerError] = useGlobalState('spacerError');\n  return {\n    spacerError,\n    setSpacerError,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n\nexport function useStep2Loading() {\n  const [step2Loading, setStep2Loading] = useGlobalState('step2Loading');\n  return {\n    step2Loading,\n    setStep2Loading,\n  };\n}\n\nexport function useStep3Loading() {\n  const [step3Loading, setStep3Loading] = useGlobalState('step3Loading');\n  return {\n    step3Loading,\n    setStep3Loading,\n  };\n}\nexport function useStep4Loading() {\n  const [step4Loading, setStep4Loading] = useGlobalState('step4Loading');\n  return {\n    step4Loading,\n    setStep4Loading,\n  };\n}\n\nexport function useStep5Loading() {\n  const [step5Loading, setStep5Loading] = useGlobalState('step5Loading');\n  return {\n    step5Loading,\n    setStep5Loading,\n  };\n}\n\nexport function useCloningStrategy() {\n  const [cloningStrategy, setCloningStrategy] = useGlobalState(\n    'cloningStrategy',\n  );\n  return {\n    cloningStrategy,\n    setCloningStrategy,\n  };\n}\n\nexport function useStep3Advanced() {\n  const [step3Advanced, setStep3Advanced] = useGlobalState('step3Advanced');\n  return {\n    step3Advanced,\n    setStep3Advanced,\n  };\n}\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n  vertical?: boolean;\n};\n\nconst onClickFactory = (step: number) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n  }\n};\n\nconst Steps = ({ step = 0, vertical = false }: Props) => (\n  <Step.Group ordered size=\"small\" vertical={vertical}>\n    <Step completed={step > 0} active={step === 0} onClick={onClickFactory(1)}>\n      <Step.Content>\n        <Step.Description>Enter Sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 1}\n      active={step === 1}\n      disabled={step < 1}\n      onClick={onClickFactory(2)}\n    >\n      <Step.Content>\n        <Step.Description>Select your spacer</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 2}\n      active={step === 2}\n      disabled={step < 2}\n      onClick={onClickFactory(3)}\n    >\n      <Step.Content>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 3}\n      active={step === 3}\n      disabled={step < 3}\n      onClick={onClickFactory(4)}\n    >\n      <Step.Content>\n        <Step.Description>Choose a PE3 sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 4}\n      active={step === 4}\n      disabled={step < 4}\n      onClick={onClickFactory(5)}\n    >\n      <Step.Content>\n        <Step.Description>Cloning strategy</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React, { SetStateAction } from 'react';\nimport { useStep } from '../../hooks';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport AppSteps from '../AppSteps';\nimport StepsProgress from '../../components/StepsProgress';\n\nconst onClickFactory = (\n  step: number,\n  setStep: (u: SetStateAction<number>) => void,\n) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n    // setStep(step - 1);\n  }\n};\n\nconst steps = [\n  {\n    number: 1,\n    name: 'Start',\n    description: 'Enter Sequence information',\n  },\n  {\n    number: 2,\n    name: 'Spacer',\n    description: 'Select your spacer',\n  },\n  {\n    number: 3,\n    name: 'pegRNA',\n    description: 'Design your pegRNA',\n  },\n  {\n    number: 4,\n    name: 'PE3',\n    description: 'Choose a PE3 sequence',\n  },\n  {\n    number: 5,\n    name: 'Cloning',\n    description: 'Choose your cloning strategy',\n  },\n];\n\nconst SideMenu = () => {\n  const { step } = useStep();\n  return (\n    <div className=\"side-menu-container\">\n      <div\n        style={{ display: 'flex', justifyContent: 'center', paddingLeft: 40 }}\n      >\n        <StepsProgress step={step} vertical />\n      </div>\n    </div>\n  );\n};\nexport default SideMenu;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSpacerError } from '../../hooks';\n\nconst SpacerError = () => {\n  const { spacerError } = useSpacerError();\n\n  return (\n    <Fragment>\n      {spacerError && (\n        <Message warning>\n          <MessageHeader>Error!</MessageHeader>\n          Looks like we couldn't predict any spacers for your sequence. You can\n          set a custom spacer in the advanced options\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SpacerError;\n","import React, { Component, ChangeEvent, Fragment } from 'react';\nimport { Divider, Form, InputOnChangeData } from 'semantic-ui-react';\nimport SpacerError from './SpacerError';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  customSpacer: string;\n  pam: string;\n  minPbs: string;\n  maxPbs: string;\n  minRt: string;\n  maxRt: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) => Promise<void>;\n  loading: boolean;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    customSpacer: '',\n    pam: 'NGG',\n    minPbs: '8',\n    maxPbs: '18',\n    minRt: '9',\n    maxRt: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    } = this.state;\n    this.props.onSubmit(\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      parseInt(minPbs),\n      parseInt(maxPbs),\n      parseInt(minRt),\n      parseInt(maxRt),\n    );\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let minRt = 9;\n    let maxRt = 16;\n    if (mutLength > 4) {\n      minRt = mutLength + 6;\n      maxRt = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      minRt = mutLength + 8;\n      maxRt = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      minRt = mutLength + 10;\n      maxRt = mutLength + 30;\n    }\n    this.setState(() => ({ minRt: minRt.toString(), maxRt: maxRt.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minRt,\n      maxRt,\n      minPbs,\n      maxPbs,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <SpacerError />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          {showAdvanced && (\n            <Fragment>\n              <Divider />\n              <h3>Advanced Options</h3>\n              <Form.Input\n                label=\"Custom PE spacer sequence\"\n                placeholder=\"\"\n                name=\"customSpacer\"\n                value={customSpacer}\n                onChange={this.handleChange}\n              />\n              <Form.Group>\n                <Form.Input\n                  label=\"Min PBS length\"\n                  placeholder=\"8\"\n                  name=\"minPbs\"\n                  value={minPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max PBS length\"\n                  placeholder=\"18\"\n                  name=\"maxPbs\"\n                  value={maxPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Min RT length\"\n                  placeholder=\"8\"\n                  name=\"minRt\"\n                  value={minRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max RT length\"\n                  placeholder=\"18\"\n                  name=\"maxRt\"\n                  value={maxRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n              </Form.Group>\n              <Form.Input\n                label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                placeholder=\"NGG\"\n                name=\"pam\"\n                value={pam}\n                onChange={this.handleChange}\n                width=\"6\"\n                required\n              />\n            </Fragment>\n          )}\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={this.props.loading} primary />\n            <Form.Button\n              content={`${showAdvanced ? 'Hide' : 'Show'} Advanced Options`}\n              onClick={this.handleAdvancedToggle}\n              basic\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","export default {\n    step1: {\n        submit: \"Step1.Submit\"\n    },\n    step2: {\n        submit: \"Step2.Submit\"\n    },\n    step3: {\n        submit: \"Step3.Submit\"\n    },\n    step4: {\n        submit: \"Step4.Submit\"\n    },\n    step5: {\n        submit: \"Step5.Submit\"\n    }\n}","import React from 'react';\nimport { generateSpacers, trackEvent } from '../../api';\nimport {\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useCustomSpacer,\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep2Loading,\n  useSpacerError,\n} from '../../hooks';\nimport { SpacerOption } from '../../types/presto';\nimport Step1Form from './Step1Form';\nimport Events from '../../api/events';\n\nconst Submit = () => {\n  const { setSpacer, setSelectedSpacerOption } = useSequencePredictions();\n  const { setWtSeq } = useWtSeq();\n  const { setMut } = useMut();\n  const { setCustomSpacer } = useCustomSpacer();\n  const { setPam } = usePam();\n  const { setMinPbs } = useMinPbs();\n  const { setMaxPbs } = useMaxPbs();\n  const { setMinRt } = useMinRt();\n  const { setMaxRt } = useMaxRt();\n  const { setStep } = useStep();\n  const { spacerOptions, setSpacerOptions } = useSpacerOptions();\n  const { setStep2Loading, step2Loading } = useStep2Loading();\n  const { setSpacerError } = useSpacerError();\n\n  async function onSubmit(\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setStep2Loading(true);\n    let finalSpacerOptions: SpacerOption[] = [];\n\n    if (customSpacer !== '') {\n      setSpacer(customSpacer.toUpperCase());\n      const customSpacerOption = {\n        spacer: customSpacer.toUpperCase(),\n        cutToMut: null,\n        quality: null,\n      };\n      finalSpacerOptions = [customSpacerOption];\n      setSelectedSpacerOption(customSpacerOption);\n      setSpacerOptions([customSpacerOption]);\n    }\n\n    const apiSpacerOptions = await generateSpacers(wtSeq, mut, pam);\n    finalSpacerOptions = [\n      ...finalSpacerOptions,\n      ...spacerOptions,\n      ...apiSpacerOptions,\n    ];\n\n    if (finalSpacerOptions.length === 0) {\n      setSpacerError(true);\n      setStep2Loading(false);\n      return;\n    }\n\n    setSpacerError(false);\n\n    setSpacerOptions(finalSpacerOptions);\n    setSelectedSpacerOption(finalSpacerOptions[0]);\n\n    setWtSeq(wtSeq);\n    setMut(mut);\n    setCustomSpacer(customSpacer);\n    setSpacer(finalSpacerOptions[0].spacer);\n    setPam(pam);\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n    setStep(1);\n\n    trackEvent(Events.step1.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-2-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep2Loading(false);\n    }, 0);\n  }\n  return <Step1Form onSubmit={onSubmit} loading={step2Loading} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Segment, Grid } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step1 = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <div style={{ height: 40 }}></div>\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <div id=\"step-1-container\">\n            <Segment color={step === 0 ? 'grey' : undefined}>\n              <h2>Start</h2>\n              <Submit />\n            </Segment>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\nexport default Step1;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"field-group\">\n        <span className=\"field-label\">{this.props.title}</span>\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React, { SetStateAction } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport {\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep,\n  useStep3Loading,\n} from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst onChangeFactory = (\n  setSpacer: (u: SetStateAction<string>) => void,\n  setStep: (u: SetStateAction<number>) => void,\n  onSubmit: () => Promise<void>,\n  step: number,\n) => (sequence: string) => {\n  setSpacer(sequence);\n  if (step >= 2) {\n    setStep(1);\n    setTimeout(() => {\n      onSubmit();\n    }, 0);\n  }\n};\n\nconst Step2Form = ({ onSubmit }: Props) => {\n  const { spacerOptions } = useSpacerOptions();\n  const { setSpacer } = useSequencePredictions();\n  const { step3Loading } = useStep3Loading();\n  const { step, setStep } = useStep();\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <SequenceOptionsDropDown\n          title=\"\"\n          options={spacerOptions.map((o) => o.spacer)}\n          onChange={onChangeFactory(setSpacer, setStep, onSubmit, step)}\n        />\n        <div style={{ height: 15 }} />\n        <Form.Button content=\"Next\" loading={step3Loading} primary />\n      </Form>\n    </div>\n  );\n};\n\nexport default Step2Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useStep3Loading,\n} from '../../hooks';\nimport Step2Form from './Step2Form';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  const { wtSeq } = useWtSeq();\n  const { mut } = useMut();\n  const { spacer } = useSequencePredictions();\n  const { pam } = usePam();\n  const { minPbs } = useMinPbs();\n  const { maxPbs } = useMaxPbs();\n  const { minRt } = useMinRt();\n  const { maxRt } = useMaxRt();\n  const { setStep3Loading } = useStep3Loading();\n\n  async function onSubmit() {\n    setStep3Loading(true);\n    getCleanWtSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    getCleanMutSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    await updateSequencePredictions(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setStep(2);\n\n    trackEvent(events.step2.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-3-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep3Loading(false);\n    }, 0);\n  }\n  return <Step2Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-2-container\">\n          <Segment color={step === 1 ? 'grey' : undefined}>\n            <h2>Spacer</h2>\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\n\ntype Props = {\n  label: string;\n  value: string | number | boolean;\n};\n\nconst renderValue = (value: string | number | boolean) => {\n  if (typeof value === 'boolean') {\n    return value ? 'True' : 'False';\n  }\n  return value || null;\n};\n\nconst Statistic = ({ label, value }: Props) => (\n  <p style={{ margin: 0 }}>\n    <b>{`${label}: `}</b>\n    {renderValue(value)}\n  </p>\n);\n\nexport default Statistic;\n","import React, { Fragment } from 'react';\nimport Statistic from './Statistic';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { TemplateOption } from '../../types/presto';\n\nconst onChangeFactory = (\n  updateSelectedTemplateOption: (option: TemplateOption) => void,\n  templateOptions: TemplateOption[],\n) => (value: string) => {\n  updateSelectedTemplateOption(\n    templateOptions.find((t) => t.rt === value) || templateOptions[0],\n  );\n};\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n    selectedTemplateOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n\n  return (\n    <Fragment>\n      {templateOptions.length > 0 && (\n        <Fragment>\n          <SequenceOptionsDropDown\n            title=\"RT templates:\"\n            options={templateOptions.map((option) => option.rt)}\n            onChange={onChangeFactory(\n              updateSelectedTemplateOption,\n              templateOptions,\n            )}\n          />\n          {selectedTemplateOption && step3Advanced && (\n            <Fragment>\n              <div style={{ height: 15 }} />\n              <div>\n                {[\n                  { label: 'fhr', value: selectedTemplateOption.fhr },\n                  { label: 'fhrGC', value: selectedTemplateOption.fhrGC },\n                  {\n                    label: 'fhrLength',\n                    value: selectedTemplateOption.fhrLength,\n                  },\n                  { label: 'rtLength', value: selectedTemplateOption.rtLength },\n                  { label: 'rtPolyT', value: selectedTemplateOption.rtPolyT },\n                  { label: 'rtTM', value: selectedTemplateOption.rtTM },\n                ].map((o) => (\n                  <Statistic label={o.label} value={o.value} />\n                ))}\n              </div>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default RTTemplates;\n\n// error: string;\n// fhr: string;\n// fhrGC: number;\n// fhrLength: number;\n// isDefault: boolean;\n// rt: string;\n// rtLength: number;\n// rtPolyT: boolean;\n// rtTM: number;\n// startsWithC: boolean;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { PBSOption } from '../../types/presto';\nimport Statistic from './Statistic';\n\nconst onChangeFactory = (\n  updateSelectedPbsOption: (option: PBSOption) => void,\n  PbsOptions: PBSOption[],\n) => (value: string) => {\n  updateSelectedPbsOption(\n    PbsOptions.find((p) => p.pbs === value) || PbsOptions[0],\n  );\n};\n\nconst PBSOptions = () => {\n  const {\n    pbsOptions,\n    updateSelectedPbsOption,\n    selectedPbsOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n  return (\n    <Fragment>\n      {pbsOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"Primer binding sites:\"\n          options={pbsOptions.map((option) => option.pbs)}\n          onChange={onChangeFactory(updateSelectedPbsOption, pbsOptions)}\n        />\n      )}\n      {selectedPbsOption && step3Advanced && (\n        <Fragment>\n          <div style={{ height: 15 }} />\n          <div>\n            {[\n              { label: 'length', value: selectedPbsOption.length },\n              { label: 'pbsGC', value: selectedPbsOption.pbsGC },\n              {\n                label: 'pbsPolyT',\n                value: selectedPbsOption.pbsPolyT,\n              },\n              { label: 'pbsTM', value: selectedPbsOption.pbsTM },\n            ].map((o) => (\n              <Statistic label={o.label} value={o.value} />\n            ))}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PBSOptions;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport { useStep4Loading, useStep3Advanced } from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst handleAdvancedToggleFactory = (\n  step3Advanced: boolean,\n  setStep3Advanced: (u: React.SetStateAction<boolean>) => void,\n) => (e: any) => {\n  e.preventDefault();\n  setStep3Advanced(!step3Advanced);\n};\n\nconst Step3Form = ({ onSubmit }: Props) => {\n  const { step4Loading } = useStep4Loading();\n  const { step3Advanced, setStep3Advanced } = useStep3Advanced();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flexGrow: 1, paddingRight: '7px' }}>\n              <RTTemplates />\n            </div>\n            <div style={{ flexGrow: 1, paddingLeft: '7px' }}>\n              <PBSOptions />\n            </div>\n          </div>\n          <div style={{ height: 15 }} />\n\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={step4Loading} primary />\n            <Form.Button\n              content={`${step3Advanced ? 'Hide' : 'Show'} Details`}\n              onClick={handleAdvancedToggleFactory(\n                step3Advanced,\n                setStep3Advanced,\n              )}\n              basic\n            />\n          </Form.Group>\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step3Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useStep, useStep4Loading } from '../../hooks';\nimport Step3Form from './Step3Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep4Loading } = useStep4Loading();\n\n  async function onSubmit() {\n    setStep(3);\n    setStep4Loading(true);\n\n    trackEvent(events.step3.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-4-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n        setStep4Loading(false);\n      }\n    }, 0);\n  }\n  return <Step3Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PegRNAWarnings = () => {\n  const {\n    warnings: { general, pegRna },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pegRna];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNAWarnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport PegRNAWarnings from './PegRNAWarnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-3-container\">\n          <Segment color={step === 2 ? 'grey' : undefined}>\n            <h2>pegRNA</h2>\n            <PegRNAWarnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import { useSequencePredictions } from '../../hooks';\nimport React, { Component, Fragment, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { PE3Option } from '../../types/presto';\nimport { API_ROOT } from '../../config';\n\ntype Props = {\n  options: PE3Option[];\n  title: string;\n  onChange: (value: PE3Option) => void;\n};\n\n// class PE3OptionsDropdown extends Component<Props> {\n//   state = {\n//     value:\n//       this.props.options.length > 0\n//         ? this.props.options[0]\n//         : { secondGuide: '', type: 'pe3' },\n//   };\n//   static defaultProps = { options: [], onChange: (_: PE3Option) => {} };\n//   handleChange = (\n//     _: SyntheticEvent<HTMLElement, Event>,\n//     { value }: DropdownItemProps,\n//   ) => {\n//     const selectedOption = this.props.options.filter(\n//       (o) => o.secondGuide === value,\n//     )[0];\n//     this.setState({ value: selectedOption });\n//     this.props.onChange(selectedOption);\n//   };\n\n//   render() {\n//     const { value } = this.state;\n\n//     return (\n//       <div className=\"field-group\">\n//         {this.props.title}\n//         <Dropdown placeholder=\"Choose an option\" text={value.secondGuide}>\n//           <Dropdown.Menu scrolling onChange={this.handleChange}>\n//             {this.props.options.map((o) => (\n//               <Dropdown.Item\n//                 label={{\n//                   color: o.type === 'pe3b' ? 'green' : undefined,\n//                   content: o.type === 'pe3b' ? 'PE3B' : 'PE3',\n//                 }}\n//                 key={o.secondGuide}\n//                 text={o.secondGuide}\n//                 value={o.secondGuide}\n//                 onClick={this.handleChange}\n//               />\n//             ))}\n//           </Dropdown.Menu>\n//         </Dropdown>\n//       </div>\n//     );\n//   }\n// }\n\nclass PE3OptionsDropdownAvatar extends Component<Props> {\n  state = {\n    value:\n      this.props.options.length > 0 ? this.props.options[0].secondGuide : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    const selectedOption = this.props.options.filter(\n      (o) => o.secondGuide === value,\n    )[0];\n    this.setState({ value: selectedOption.secondGuide });\n    this.props.onChange(selectedOption);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"field-group\">\n        <span className=\"field-label\">{this.props.title}</span>\n        <Dropdown\n          placeholder=\"Choose an option\"\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o.secondGuide,\n            text: o.secondGuide,\n            value: o.secondGuide,\n            image:\n              o.type !== 'None'\n                ? {\n                    src:\n                      o.type === 'pe3'\n                        ? `${API_ROOT}/images/pe3pill.png`\n                        : `${API_ROOT}/images/pe3bpill.png`,\n                  }\n                : undefined,\n          }))}\n          value={value}\n          selection\n          scrolling\n        ></Dropdown>\n      </div>\n    );\n  }\n}\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <PE3OptionsDropdownAvatar\n          title=\"PE3 Guides:\"\n          options={pe3Options}\n          onChange={updateSelectedPe3Option}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3Options;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport { useStep5Loading } from '../../hooks';\nimport PE3Options from './PE3Options';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst Step4Form = ({ onSubmit }: Props) => {\n  const { step5Loading } = useStep5Loading();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <PE3Options />\n          <div style={{ height: 15 }} />\n          <Form.Button content=\"Next\" loading={step5Loading} primary />\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step4Form;\n","import React from 'react';\nimport { trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useStep, useStep5Loading } from '../../hooks';\nimport Step4Form from './Step4Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep5Loading } = useStep5Loading();\n\n  async function onSubmit() {\n    setStep(4);\n    setStep5Loading(true);\n\n    trackEvent(events.step4.submit);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-5-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep5Loading(false);\n    }, 1000);\n  }\n  return <Step4Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst Pe3Warnings = () => {\n  const {\n    warnings: { general, pe3 },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pe3];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3Warnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport Pe3Warnings from './Pe3Warnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-4-container\">\n          <Segment color={step === 3 ? 'grey' : undefined}>\n            <h2>PE3</h2>\n            <Pe3Warnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { generateCSV, trackEvent } from '../../api';\nimport events from '../../api/events';\nimport { useSequencePredictions } from '../../hooks';\n\nconst FullResultsButton = () => {\n  const {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n  } = useSequencePredictions();\n  const handleClick = () =>\n    generateCSV(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n  trackEvent(events.step5.submit);\n  return (\n    <Button onClick={handleClick} primary>\n      Download Full Results\n    </Button>\n  );\n};\n\nexport default FullResultsButton;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string | undefined;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    if (this.props.value) {\n      copy(this.props.value);\n      this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n      console.log('indicate');\n      setTimeout(() => {\n        this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n      }, 1000);\n    }\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React, { Component, SetStateAction, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { useCloningStrategy } from '../../hooks';\n\nconst options = ['Richardson & Steyert et al. 2021', 'None'].map((o) => ({\n  key: o,\n  text: o,\n  value: o,\n}));\n\nconst handleChangeFactory = (\n  setCloningStrategy: (u: SetStateAction<string>) => void,\n) => (_: SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n  setCloningStrategy(value as string);\n};\n\nconst CloningStrategyDropdown = () => {\n  const { setCloningStrategy } = useCloningStrategy();\n  return (\n    <div className=\"field-group\">\n      <span className=\"field-label\">Cloning strategy</span>\n      <Dropdown\n        onChange={handleChangeFactory(setCloningStrategy)}\n        options={options}\n        placeholder=\"Choose an option\"\n        selection\n        scrolling\n        defaultValue={options[0].value}\n      />\n    </div>\n  );\n};\n\nexport default CloningStrategyDropdown;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { useCloningStrategy, usePegRNA } from '../../hooks';\nimport { FinalPegRNAAnnotation } from '../../types/presto';\nimport CloningStrategyDropdown from './CloningStrategyDropdown';\n\nfunction uniqBy(\n  a: Array<FinalPegRNAAnnotation>,\n  key: (o: FinalPegRNAAnnotation) => any,\n) {\n  let seen = new Set();\n  return a.filter((item) => {\n    let k = key(item);\n    return seen.has(k) ? false : seen.add(k);\n  });\n}\n\nconst getSequence = (annotations: FinalPegRNAAnnotation[]) =>\n  annotations.map((a) => a.sequence).join('');\n\nconst getCloningStrategyAnnotations = (\n  annotations: FinalPegRNAAnnotation[],\n  cloningStrategy: string,\n) =>\n  annotations.filter((a) =>\n    cloningStrategy === 'None'\n      ? ['rtt', 'pbs', 'spacer', 'cas9_scaffold'].includes(a.name)\n      : true,\n  );\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n  const { cloningStrategy } = useCloningStrategy();\n  const annotations = uniqBy(\n    getCloningStrategyAnnotations(\n      pegRNA?.annotations || ([] as FinalPegRNAAnnotation[]),\n      cloningStrategy,\n    ),\n    (a: FinalPegRNAAnnotation) => a.name,\n  );\n\n  return (\n    <Fragment>\n      <CloningStrategyDropdown />\n      {pegRNA && (\n        <div style={{ marginTop: 30 }}>\n          <div className=\"field-group\">\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              <span className=\"field-label\">Final pegRNA:</span>\n              <Copy\n                value={getSequence(\n                  getCloningStrategyAnnotations(\n                    pegRNA.annotations,\n                    cloningStrategy,\n                  ),\n                )}\n              />\n              <div style={{ display: 'flex', position: 'absolute', right: 12 }}>\n                {annotations.map((annotation) => (\n                  <div style={{ display: 'flex' }}>\n                    <div\n                      style={{\n                        width: 19,\n                        height: 19,\n                        backgroundColor: annotation.color,\n                        borderRadius: 5,\n                      }}\n                    ></div>\n                    <span style={{ marginLeft: 2, marginRight: 10 }}>\n                      {annotation.name}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <p style={{ wordBreak: 'break-word', marginTop: 10 }}>\n              {getCloningStrategyAnnotations(\n                pegRNA.annotations,\n                cloningStrategy,\n              ).map((annotation) => (\n                <span\n                  style={{\n                    backgroundColor: annotation.color,\n                    padding: '0 5px',\n                    borderRadius: 5,\n                  }}\n                >\n                  {annotation.sequence}\n                </span>\n              ))}\n            </p>\n          </div>\n          {/* <SeqViz\n            name=\"pegRNA\"\n            seq={pegRNA.sequence}\n            viewer=\"circular\"\n            annotations={annotations}\n            showComplement={false}\n            style={{ height: '300px', width: '100%' }}\n            zoom={{\n              linear: 50,\n            }}\n          /> */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport {\n  usePe3sgRNA,\n  useSequencePredictions,\n  useCloningStrategy,\n} from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3Options } = useSequencePredictions();\n  const { pe3sgRNA } = usePe3sgRNA();\n  const { selectedPe3Option } = useSequencePredictions();\n  const { cloningStrategy } = useCloningStrategy();\n\n  return (\n    <div>\n      {pe3Options.length > 0 && selectedPe3Option?.secondGuide !== 'None' && (\n        <Fragment>\n          <div style={{ flexGrow: 1 }}>\n            <div className=\"field-group\">\n              <div>\n                <span className=\"field-label\">\n                  PE3 {cloningStrategy !== 'None' ? 'sense' : ''}:\n                </span>\n                <Copy\n                  value={\n                    cloningStrategy !== 'None'\n                      ? pe3sgRNA.sense\n                      : selectedPe3Option?.secondGuide\n                  }\n                />\n              </div>\n              <p>\n                <span className=\"generic-output-sequence\">\n                  {cloningStrategy !== 'None'\n                    ? pe3sgRNA.sense\n                    : selectedPe3Option?.secondGuide}\n                </span>\n              </p>\n            </div>\n          </div>\n          {cloningStrategy !== 'None' && (\n            <div style={{ flexGrow: 1 }}>\n              <div className=\"field-group\">\n                <div>\n                  <span className=\"field-label\">PE3 antisense:</span>\n                  <Copy value={pe3sgRNA.antisense} />\n                </div>\n                <p>\n                  <span className=\"generic-output-sequence\">\n                    {pe3sgRNA.antisense}\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { useSequencePredictions, useCloningStrategy } from '../../hooks';\n\nconst SpacersgRNA = () => {\n  const {\n    spacersgRNA,\n    pe3Options,\n    selectedSpacerOption,\n  } = useSequencePredictions();\n  const { cloningStrategy } = useCloningStrategy();\n\n  return (\n    <div>\n      {pe3Options.length > 0 && (\n        <Fragment>\n          <div style={{ flexGrow: 1 }}>\n            <div className=\"field-group\">\n              <div>\n                <span className=\"field-label\">\n                  Spacer {cloningStrategy !== 'None' ? 'sense' : ''}:\n                </span>\n                <Copy\n                  value={\n                    cloningStrategy !== 'None'\n                      ? spacersgRNA.sense\n                      : selectedSpacerOption?.spacer\n                  }\n                />\n              </div>\n              <p>\n                <span className=\"spacer-output-sequence\">\n                  {cloningStrategy !== 'None'\n                    ? spacersgRNA.sense\n                    : selectedSpacerOption?.spacer}\n                </span>\n              </p>\n            </div>\n          </div>\n          {cloningStrategy !== 'None' && (\n            <div style={{ flexGrow: 1 }}>\n              <div className=\"field-group\">\n                <div>\n                  <span className=\"field-label\">Spacer antisense:</span>\n                  <Copy value={spacersgRNA.antisense} />\n                </div>\n                <p>\n                  <span className=\"spacer-output-sequence\">\n                    {spacersgRNA.antisense}\n                  </span>\n                </p>\n              </div>\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default SpacersgRNA;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport FullResultsButton from './FullResultsButton';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\nimport SpacersgRNA from './SpacersgRNA';\n\nconst Step5 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={16}>\n        <div id=\"step-5-container\" style={{ marginBottom: 40 }}>\n          <Segment color={step === 4 ? 'grey' : undefined}>\n            <h2>Cloning</h2>\n            <PegRNA />\n            <div style={{ height: 15 }} />\n            <SpacersgRNA />\n            <div style={{ height: 15 }} />\n            <Pe3sgRNA />\n            <div style={{ height: 15 }} />\n            <FullResultsButton />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step5;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport SideMenu from './SideMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <AppMenu />\n\n      {/* <Steps /> */}\n      <SideMenu />\n      <div className=\"main-content-container\">\n        <Grid centered>\n          <Step1 />\n          {step >= 1 && <Step2 />}\n          {step >= 2 && <Step3 />}\n          {step >= 3 && <Step4 />}\n          {step >= 4 && <Step5 />}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}