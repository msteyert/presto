{"version":3,"sources":["App/AppMenu/index.tsx","api/index.ts","config.ts","hooks/index.ts","components/SubmitForm.tsx","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptionsDropDown.tsx","App/Step2/RTTemplates.tsx","App/Step2/PBSOptions.tsx","App/Step2/PE3BOptions.tsx","App/Step2/PE3Options.tsx","components/Copy.tsx","App/Step2/PegRNA.tsx","App/Step2/Pe3sgRNA.tsx","App/Step2/Pe3bsgRNA.tsx","App/Step2/OutputTabs.tsx","App/Step2/index.tsx","components/StepsProgress.tsx","App/AppSteps/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","backgroundColor","zIndex","Item","name","active","generateTemplateOptions","wtSeq","mut","spacer","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","createGlobalState","templateOptions","selectedTemplateOption","pbsOptions","selectedPbsOption","pe3bOptions","pe3Options","selectedPe3Option","selectedPe3bOption","cleanWtSeq","cleanMutSeq","step","pegRNA","pe3sgRNA","sense","antisense","pe3bsgRNA","useGlobalState","getGlobalState","useSequencePredictions","setTemplateOptions","setSpacer","setPBSOptions","setPe3bOptions","setPe3Options","setPegRNA","setPe3sgRNA","setPe3bsgRNA","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setSelectedPe3bOption","toUpperCase","length","rt","filter","option","type","secondGuide","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","sequence","globalSelectedPe3Option","globalSelectedPe3bOption","sgRNA","updateSelectedTemplateOption","updateSelectedPbsOption","updateSelectedPe3Option","updateSelectedPe3bOption","updateSequencePredictions","useStep","setStep","SubmitForm","state","pam","PBSmin","PBSmax","rtMin","rtMax","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Group","Button","content","onClick","primary","Component","Submit","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","Step1","Grid","Row","Column","width","SequenceOptionsDropdown","options","_","display","flexDirection","title","Dropdown","map","o","key","text","selection","scrolling","defaultProps","RTTemplates","PBSOptions","PE3BOptions","PE3Options","Copy","helpText","isOpen","handleCopy","copy","console","log","setTimeout","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","link","PegRNA","usePegRNA","wordBreak","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","Pe3bsgRNA","setPe3bSgRNA","usePe3bsgRNA","panes","menuItem","textAlign","render","Tab","Pane","OutputTabs","Step2","Steps","Step","ordered","size","completed","Content","Title","Description","AppSteps","justifyContent","StepsProgress","App","centered","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30d2341f.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'sticky',\n      top: 0,\n      backgroundColor: 'white',\n      zIndex: 1,\n    }}\n  >\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","import { API_ROOT } from '../config';\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({ wtSeq, mut, spacer }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n} from '../api';\nimport { GlobalState, PE3Option } from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  spacer: '',\n  templateOptions: [],\n  selectedTemplateOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3bOptions: [],\n  pe3Options: [],\n  selectedPe3Option: null,\n  selectedPe3bOption: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: '',\n  pe3sgRNA: { sense: '', antisense: '' },\n  pe3bsgRNA: { sense: '', antisense: '' },\n};\n\nconst { useGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [spacer, setSpacer] = useGlobalState('spacer');\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3bOptions, setPe3bOptions] = useGlobalState('pe3bOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [pe3bsgRNA, setPe3bsgRNA] = useGlobalState('pe3bsgRNA');\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [selectedPe3bOption, setSelectedPe3bOption] = useGlobalState(\n    'selectedPe3bOption',\n  );\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n      ),\n    );\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0].rt);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0].pbs);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n    );\n    setPe3bOptions(pe3Options.filter((option) => option.type === 'pe3b'));\n    if (getGlobalState('pe3bOptions').length > 0) {\n      setSelectedPe3bOption(getGlobalState('pe3bOptions')[0].secondGuide);\n    }\n    setPe3Options(pe3Options.filter((option) => option.type === 'pe3'));\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0].secondGuide);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const { sequence } = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.toUpperCase(),\n        globalSelectedPbsOption.toUpperCase(),\n      );\n      setPegRNA(sequence);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: string) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: string) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: string) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n  function updateSelectedPe3bOption(option: string) {\n    setSelectedPe3bOption(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    const globalSelectedPe3bOption = getGlobalState('selectedPe3bOption');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3Option.toUpperCase());\n      setPe3sgRNA(sgRNA);\n    }\n    if (globalSelectedPe3bOption) {\n      const sgRNA = await generateSgRNA(globalSelectedPe3bOption.toUpperCase());\n      setPe3bsgRNA(sgRNA);\n    }\n  }\n\n  return {\n    spacer,\n    templateOptions,\n    pbsOptions,\n    pe3bOptions,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    pe3bsgRNA,\n    setSpacer,\n    selectedTemplateOption,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSelectedPe3bOption,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(wtSeq: string, mut: string, spacer: string) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(wtSeq: string, mut: string, spacer: string) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\nexport function usePe3bsgRNA() {\n  const [pe3bsgRNA, setPe3bSgRNA] = useGlobalState('pe3bsgRNA');\n\n  return {\n    pe3bsgRNA,\n    setPe3bSgRNA,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n","import React, { Component, ChangeEvent } from 'react';\nimport { Form, InputOnChangeData } from 'semantic-ui-react';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  spacer: string;\n  pam: string;\n  PBSmin: string;\n  PBSmax: string;\n  rtMin: string;\n  rtMax: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (wtSeq: string, mut: string, spacer: string) => Promise<void>;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    spacer: '',\n    pam: 'NGG',\n    PBSmin: '8',\n    PBSmax: '18',\n    rtMin: '9',\n    rtMax: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const { wtSeq, mut, spacer } = this.state;\n    this.props.onSubmit(wtSeq, mut, spacer);\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let rtMin = 9;\n    let rtMax = 16;\n    if (mutLength > 4) {\n      rtMin = mutLength + 6;\n      rtMax = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      rtMin = mutLength + 8;\n      rtMax = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      rtMin = mutLength + 10;\n      rtMax = mutLength + 30;\n    }\n    this.setState(() => ({ rtMin: rtMin.toString(), rtMax: rtMax.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      rtMin,\n      rtMax,\n      PBSmin,\n      PBSmax,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            label=\"PE spacer sequence\"\n            placeholder=\"\"\n            name=\"spacer\"\n            value={spacer}\n            onChange={this.handleChange}\n            required\n          />\n          {showAdvanced && (\n            <Form.Group>\n              <Form.Input\n                label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                placeholder=\"NGG\"\n                name=\"pam\"\n                value={pam}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Min PBS length\"\n                placeholder=\"8\"\n                name=\"PBSmin\"\n                value={PBSmin}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Max PBS length\"\n                placeholder=\"18\"\n                name=\"PBSmax\"\n                value={PBSmax}\n                onChange={this.handleChange}\n                required\n              />\n              <Form.Input\n                label=\"Min RT length\"\n                placeholder=\"8\"\n                name=\"rtMin\"\n                value={rtMin}\n                onChange={this.handleRTChange}\n                required\n              />\n              <Form.Input\n                label=\"Max RT length\"\n                placeholder=\"18\"\n                name=\"rtMax\"\n                value={rtMax}\n                onChange={this.handleRTChange}\n                required\n              />\n            </Form.Group>\n          )}\n          <Form.Group>\n            <Form.Button\n              content=\"Show Advanced Options\"\n              onClick={this.handleAdvancedToggle}\n            />\n            <Form.Button content=\"Submit\" primary />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n} from '../../hooks';\nimport SubmitForm from '../../components/SubmitForm';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  async function onSubmit(wtSeq: string, mut: string, spacer: string) {\n    getCleanWtSeq(wtSeq, mut, spacer);\n    getCleanMutSeq(wtSeq, mut, spacer);\n    await updateSequencePredictions(wtSeq, mut, spacer);\n    setStep(1);\n  }\n  return <SubmitForm onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Submit from './Submit';\n\nconst Step1 = () => (\n  <Grid.Row>\n    <Grid.Column width={14}>\n      <Submit />\n    </Grid.Column>\n  </Grid.Row>\n);\nexport default Step1;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {this.props.title}\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n  } = useSequencePredictions();\n\n  return (\n    <SequenceOptionsDropDown\n      title=\"RT templates:\"\n      options={templateOptions.map((option) => option.rt)}\n      onChange={updateSelectedTemplateOption}\n    />\n  );\n};\n\nexport default RTTemplates;\n","import React from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PBSOptions = () => {\n  const { pbsOptions, updateSelectedPbsOption } = useSequencePredictions();\n  return (\n    <SequenceOptionsDropDown\n      title=\"Primer binding sites:\"\n      options={pbsOptions.map((option) => option.pbs)}\n      onChange={updateSelectedPbsOption}\n    />\n  );\n};\n\nexport default PBSOptions;\n","import React from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3BOptions = () => {\n  const { pe3bOptions, updateSelectedPe3bOption } = useSequencePredictions();\n  return (\n    <SequenceOptionsDropDown\n      title=\"PE3b Guides:\"\n      options={pe3bOptions.map((option) => option.secondGuide)}\n      onChange={updateSelectedPe3bOption}\n    />\n  );\n};\n\nexport default PE3BOptions;\n","import React from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <SequenceOptionsDropDown\n      title=\"PE3 Guides:\"\n      options={pe3Options.map((option) => option.secondGuide)}\n      onChange={updateSelectedPe3Option}\n    />\n  );\n};\n\nexport default PE3Options;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    copy(this.props.value);\n    this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n    console.log('indicate');\n    setTimeout(() => {\n      this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n    }, 1000);\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React from 'react';\nimport Copy from '../../components/Copy';\nimport { usePegRNA } from '../../hooks';\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      <div>\n        Final pegRNA:\n        <Copy value={pegRNA} />\n      </div>\n      <p style={{ wordBreak: 'break-word' }}>{pegRNA}</p>\n    </div>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3sgRNA } from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3sgRNA } = usePe3sgRNA();\n\n  return (\n    <Fragment>\n      <Grid.Column width={8}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div>\n            sense sgRNA:\n            <Copy value={pe3sgRNA.sense} />\n          </div>\n          <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.sense}</p>\n        </div>\n      </Grid.Column>\n      <Grid.Column width={8}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div>\n            antisense sgRNA:\n            <Copy value={pe3sgRNA.antisense} />\n          </div>\n          <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.antisense}</p>\n        </div>\n      </Grid.Column>\n    </Fragment>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React, { Fragment } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport Copy from '../../components/Copy';\nimport { usePe3bsgRNA } from '../../hooks';\n\nconst Pe3bsgRNA = () => {\n  const { pe3bsgRNA } = usePe3bsgRNA();\n\n  return (\n    <Fragment>\n      <Grid.Column width={8}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div>\n            sense sgRNA:\n            <Copy value={pe3bsgRNA.sense} />\n          </div>\n          <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.sense}</p>\n        </div>\n      </Grid.Column>\n      <Grid.Column width={8}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <div>\n            antisense sgRNA:\n            <Copy value={pe3bsgRNA.antisense} />\n          </div>\n          <p style={{ wordBreak: 'break-word' }}>{pe3bsgRNA.antisense}</p>\n        </div>\n      </Grid.Column>\n    </Fragment>\n  );\n};\n\nexport default Pe3bsgRNA;\n","import React from 'react';\nimport { Tab, Grid } from 'semantic-ui-react';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport PE3BOptions from './PE3BOptions';\nimport PE3Options from './PE3Options';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\nimport Pe3bsgRNA from './Pe3bsgRNA';\n\nconst panes = [\n  {\n    menuItem: 'pegRNA',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <RTTemplates />\n            </Grid.Column>\n            <Grid.Column width={8}>\n              <PBSOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PegRNA />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3Options />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3sgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n  {\n    menuItem: 'PE3b',\n    textAlign: 'left',\n    render: () => (\n      <Tab.Pane>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={16}>\n              <PE3BOptions />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Pe3bsgRNA />\n          </Grid.Row>\n        </Grid>\n      </Tab.Pane>\n    ),\n  },\n];\n\nconst OutputTabs = () => <Tab panes={panes} />;\n\nexport default OutputTabs;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport OutputTabs from './OutputTabs';\n\nconst Step2 = () => {\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <OutputTabs />\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default Step2;\n","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n};\n\nconst Steps = ({ step = 0 }: Props) => (\n  <Step.Group ordered size=\"small\">\n    <Step completed={step > 0} active={step === 0}>\n      <Step.Content>\n        <Step.Title>Enter</Step.Title>\n        <Step.Description>Enter Sequence information</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step completed={step > 1} active={step === 1}>\n      <Step.Content>\n        <Step.Title>Design</Step.Title>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport StepsProgress from '../../components/StepsProgress';\nimport { useStep } from '../../hooks';\n\nconst AppSteps = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\n          <StepsProgress step={step} />\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default AppSteps;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <AppMenu />\n      <Grid centered>\n        <Steps />\n        <Step1 />\n        {step === 1 && <Step2 />}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}