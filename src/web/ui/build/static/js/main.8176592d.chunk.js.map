{"version":3,"sources":["App/AppMenu/index.tsx","config.ts","api/index.ts","hooks/index.ts","components/StepsProgress.tsx","App/SideMenu/index.tsx","App/Step1/SpacerError.jsx","App/Step1/Step1Form.tsx","App/Step1/Submit.tsx","App/Step1/index.tsx","components/SequenceOptionsDropDown.tsx","App/Step2/Step2Form.tsx","App/Step2/Submit.tsx","App/Step2/index.tsx","App/Step3/Statistic.tsx","App/Step3/RTTemplates.tsx","App/Step3/PBSOptions.tsx","App/Step3/Step3Form.tsx","App/Step3/Submit.tsx","App/Step3/PegRNAWarnings.jsx","App/Step3/index.tsx","App/Step4/PE3Options.tsx","App/Step4/Step4Form.tsx","App/Step4/Submit.tsx","App/Step4/Pe3Warnings.jsx","App/Step4/index.tsx","App/Step5/FullResultsButton.tsx","components/Copy.tsx","App/Step5/CloningStrategyDropdown.tsx","App/Step5/PegRNA.tsx","App/Step5/Pe3sgRNA.tsx","App/Step5/index.tsx","App/index.tsx","index.tsx"],"names":["AppMenu","Menu","secondary","pointing","style","position","top","left","width","backgroundColor","zIndex","marginBottom","alt","src","height","Item","name","active","generateTemplateOptions","wtSeq","mut","spacer","pam","minPbs","maxPbs","minRt","maxRt","a","fetch","method","body","JSON","stringify","res","json","generatePrimerBindingSiteOptions","generatePe3Options","generateMutSeq","generateCleanWtSeq","generatePegRNA","rtt","pbs","generateSgRNA","pe3","generateSpacers","spacerOptions","generateWarnings","generateCSV","text","responseText","url","window","URL","createObjectURL","Blob","link","document","createElement","id","href","setAttribute","headers","get","appendChild","click","elem","querySelector","parentNode","removeChild","createGlobalState","customSpacer","templateOptions","selectedTemplateOption","selectedSpacerOption","pbsOptions","selectedPbsOption","pe3Options","selectedPe3Option","cleanWtSeq","cleanMutSeq","step","pegRNA","pe3sgRNA","sense","antisense","warnings","general","pegRna","spacerError","step2Loading","step3Loading","step4Loading","step5Loading","cloningStrategy","step3Advanced","useGlobalState","getGlobalState","useSequencePredictions","setTemplateOptions","setWtSeq","setMut","setSpacer","setPam","setMinPbs","setMaxPbs","setMinRt","setMaxRt","setPBSOptions","setPe3Options","setPegRNA","setPe3sgRNA","setSelectedSpacerOption","setSelectedTemplateOption","setSelectedPbsOption","setSelectedPe3Option","setWarnings","toUpperCase","length","updatePegRNA","updateSgRNA","globalSpacer","globalSelectedTemplateOption","globalSelectedPbsOption","rt","globalSelectedPe3Option","secondGuide","sgRNA","updateSelectedTemplateOption","option","updateSelectedPbsOption","updateSelectedPe3Option","updateSequencePredictions","useWtSeq","useMut","usePam","useMinPbs","useMaxPbs","useMinRt","useMaxRt","useSpacerOptions","setSpacerOptions","useSpacerError","setSpacerError","useStep","setStep","useStep3Loading","setStep3Loading","useStep4Loading","setStep4Loading","useStep5Loading","setStep5Loading","useCloningStrategy","setCloningStrategy","useStep3Advanced","setStep3Advanced","onClickFactory","target","getElementById","scrollIntoView","block","behavior","Steps","vertical","Step","Group","ordered","size","completed","onClick","Content","Title","Description","disabled","SideMenu","paddingTop","display","justifyContent","paddingLeft","StepsProgress","SpacerError","Message","warning","MessageHeader","SubmitForm","state","showAdvanced","handleChange","e","value","setState","newState","calcRtRange","handleRTChange","handleSubmit","props","onSubmit","parseInt","handleAdvancedToggle","preventDefault","mutLength","toString","this","Form","Input","label","placeholder","onChange","required","Divider","Button","content","loading","primary","Component","Submit","setCustomSpacer","useCustomSpacer","setStep2Loading","useStep2Loading","finalSpacerOptions","customSpacerOption","cutToMut","quality","apiSpacerOptions","setTimeout","nextStep","Step1Form","Step1","Grid","Row","Column","Segment","color","undefined","SequenceOptionsDropdown","options","_","flexDirection","title","Dropdown","map","o","key","selection","scrolling","defaultProps","onChangeFactory","sequence","Step2Form","getCleanWtSeq","setCleanWtSeq","useCleanWtSeq","getCleanMutSeq","setCleanMutSeq","useCleanMutSeq","Step2","Statistic","margin","renderValue","find","t","RTTemplates","fhr","fhrGC","fhrLength","rtLength","rtPolyT","rtTM","PbsOptions","p","PBSOptions","pbsGC","pbsPolyT","pbsTM","handleAdvancedToggleFactory","Step3Form","flexGrow","paddingRight","PegRNAWarnings","i","PE3OptionsDropdownAvatar","selectedOption","filter","image","avatar","type","PE3Options","Step4Form","Pe3Warnings","FullResultsButton","Copy","helpText","isOpen","handleCopy","copy","console","log","handleMouseOver","handleMouseLeave","Popup","open","trigger","Icon","onMouseOver","onMouseLeave","handleChangeFactory","CloningStrategyDropdown","defaultValue","getSequence","annotations","join","getCloningStrategyAnnotations","includes","PegRNA","usePegRNA","seen","Set","item","k","has","add","uniqBy","marginTop","right","annotation","borderRadius","marginLeft","marginRight","wordBreak","padding","Pe3sgRNA","setPe3SgRNA","usePe3sgRNA","Step5","App","overflow","overflowX","overflowY","centered","Step3","Step4","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8176592d.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { API_ROOT } from '../../config';\n\nconst AppMenu = () => (\n  <Menu\n    secondary\n    pointing\n    style={{\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      backgroundColor: '#f3f4f5',\n      zIndex: 2,\n      marginBottom: 0,\n    }}\n  >\n    <img\n      alt=\"PegAssist Logo\"\n      src={`${API_ROOT}/icon/apple-icon.png`}\n      style={{ height: 50 }}\n    />\n    <Menu.Item name=\"Home\" active></Menu.Item>\n    <Menu.Item name=\"Instructions\"></Menu.Item>\n    <Menu.Item name=\"Examples\"></Menu.Item>\n  </Menu>\n);\n\nexport default AppMenu;\n","export const API_ROOT =\n  process.env.NODE_ENV === 'development' ? 'http://127.0.0.1:5000' : '';\n","import { API_ROOT } from '../config';\nimport { SpacerOption } from '../types/presto';\n\nexport const generateTemplateOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/rt`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePrimerBindingSiteOptions = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pbs`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePe3Options = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pe3`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateMutSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/mutSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCleanWtSeq = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/cleanWtSeq`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generatePegRNA = async (\n  spacer: string,\n  rtt: string,\n  pbs: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/pegrna`, {\n    method: 'post',\n    body: JSON.stringify({ spacer, rtt, pbs }),\n  });\n  return await res.json();\n};\n\nexport const generateSgRNA = async (pe3: string) => {\n  const res = await fetch(`${API_ROOT}/generate/sgrna`, {\n    method: 'post',\n    body: JSON.stringify({ pe3 }),\n  });\n  return await res.json();\n};\n\nexport const generateSpacers = async (\n  wtSeq: string,\n  mut: string,\n  pam: string,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/spacers`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer: '',\n      pam,\n    }),\n  });\n  const spacerOptions: SpacerOption[] = await res.json();\n  return spacerOptions;\n};\n\nexport const generateWarnings = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/warnings`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  return await res.json();\n};\n\nexport const generateCSV = async (\n  wtSeq: string,\n  mut: string,\n  spacer: string,\n  pam: string,\n  minPbs: number,\n  maxPbs: number,\n  minRt: number,\n  maxRt: number,\n) => {\n  const res = await fetch(`${API_ROOT}/generate/csv`, {\n    method: 'post',\n    body: JSON.stringify({\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    }),\n  });\n  const responseText = await res.text();\n  const url = window.URL.createObjectURL(new Blob([responseText]));\n  const link = document.createElement('a');\n  link.id = 'download';\n  link.href = url;\n  link.setAttribute('download', res.headers.get('FileName') || 'presto.csv');\n  document.body.appendChild(link);\n  link.click();\n\n  const elem = document.querySelector('#download');\n\n  if (elem && elem.parentNode) {\n    elem.parentNode.removeChild(elem);\n  }\n};\n","import {\n  generateTemplateOptions,\n  generateCleanWtSeq,\n  generateMutSeq,\n  generatePrimerBindingSiteOptions,\n  generatePe3Options,\n  generatePegRNA,\n  generateSgRNA,\n  generateWarnings,\n} from '../api';\nimport { GlobalState, PBSOption, PE3Option, TemplateOption } from '../types/presto';\nimport { createGlobalState } from 'react-hooks-global-state';\n\nconst initialState: GlobalState = {\n  wtSeq: '',\n  mut: '',\n  spacer: '',\n  customSpacer: '',\n  pam: 'NGG',\n  minPbs: 8,\n  maxPbs: 18,\n  minRt: 9,\n  maxRt: 16,\n  templateOptions: [],\n  selectedTemplateOption: null,\n  spacerOptions: [],\n  selectedSpacerOption: null,\n  pbsOptions: [],\n  selectedPbsOption: null,\n  pe3Options: [],\n  selectedPe3Option: null,\n  cleanWtSeq: '',\n  cleanMutSeq: '',\n  step: 0,\n  pegRNA: null,\n  pe3sgRNA: { sense: '', antisense: '' },\n  warnings: {\n    general: [],\n    pegRna: [],\n    pe3: [],\n  },\n  spacerError: false,\n  step2Loading: false,\n  step3Loading: false,\n  step4Loading: false,\n  step5Loading: false,\n  cloningStrategy: \"Richardson\",\n  step3Advanced: false\n};\n\nconst { useGlobalState, getGlobalState } = createGlobalState(initialState);\n\nexport function useSequencePredictions() {\n  const [templateOptions, setTemplateOptions] = useGlobalState(\n    'templateOptions',\n  );\n\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n  const [mut, setMut] = useGlobalState('mut');\n  const [spacer, setSpacer] = useGlobalState('spacer');\n\n  const [pam, setPam] = useGlobalState('pam');\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n  const [minRt, setMinRt] = useGlobalState('minRt');\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  const [pbsOptions, setPBSOptions] = useGlobalState('pbsOptions');\n  const [pe3Options, setPe3Options] = useGlobalState('pe3Options');\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n  const [pe3sgRNA, setPe3sgRNA] = useGlobalState('pe3sgRNA');\n  const [selectedSpacerOption, setSelectedSpacerOption] = useGlobalState(\n    'selectedSpacerOption',\n  );\n  const [selectedTemplateOption, setSelectedTemplateOption] = useGlobalState(\n    'selectedTemplateOption',\n  );\n  const [selectedPbsOption, setSelectedPbsOption] = useGlobalState(\n    'selectedPbsOption',\n  );\n  const [selectedPe3Option, setSelectedPe3Option] = useGlobalState(\n    'selectedPe3Option',\n  );\n  const [warnings, setWarnings] = useGlobalState('warnings');\n\n  async function updateSequencePredictions(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setTemplateOptions(\n      await generateTemplateOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWarnings(\n      await generateWarnings(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n\n    setWtSeq(wtSeq.toUpperCase());\n    setMut(mut.toUpperCase());\n    setSpacer(spacer.toUpperCase());\n\n    setPam(pam.toUpperCase());\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n\n    if (getGlobalState('templateOptions').length > 0) {\n      setSelectedTemplateOption(getGlobalState('templateOptions')[0]);\n    }\n    setPBSOptions(\n      await generatePrimerBindingSiteOptions(\n        wtSeq.toUpperCase(),\n        mut.toUpperCase(),\n        spacer.toUpperCase(),\n        pam.toUpperCase(),\n        minPbs,\n        maxPbs,\n        minRt,\n        maxRt,\n      ),\n    );\n    if (getGlobalState('pbsOptions').length > 0) {\n      setSelectedPbsOption(getGlobalState('pbsOptions')[0]);\n    }\n    const pe3Options: PE3Option[] = await generatePe3Options(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setPe3Options(pe3Options);\n    if (getGlobalState('pe3Options').length > 0) {\n      setSelectedPe3Option(getGlobalState('pe3Options')[0]);\n    }\n\n    updatePegRNA();\n    updateSgRNA();\n  }\n\n  async function updatePegRNA() {\n    const globalSpacer = getGlobalState('spacer');\n    const globalSelectedTemplateOption = getGlobalState(\n      'selectedTemplateOption',\n    );\n    const globalSelectedPbsOption = getGlobalState('selectedPbsOption');\n    if (globalSelectedTemplateOption && globalSelectedPbsOption) {\n      const pegRNA = await generatePegRNA(\n        globalSpacer.toUpperCase(),\n        globalSelectedTemplateOption.rt.toUpperCase(),\n        globalSelectedPbsOption.pbs.toUpperCase(),\n      );\n      setPegRNA(pegRNA);\n    }\n  }\n\n  function updateSelectedTemplateOption(option: TemplateOption) {\n    setSelectedTemplateOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPbsOption(option: PBSOption) {\n    setSelectedPbsOption(option);\n    updatePegRNA();\n  }\n\n  function updateSelectedPe3Option(option: PE3Option) {\n    setSelectedPe3Option(option);\n    updateSgRNA();\n  }\n\n  async function updateSgRNA() {\n    const globalSelectedPe3Option = getGlobalState('selectedPe3Option');\n    if (globalSelectedPe3Option) {\n      const sgRNA = await generateSgRNA(\n        globalSelectedPe3Option.secondGuide.toUpperCase(),\n      );\n      setPe3sgRNA(sgRNA);\n    }\n  }\n\n  return {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n    templateOptions,\n    pbsOptions,\n    selectedPbsOption,\n    pe3Options,\n    pegRNA,\n    pe3sgRNA,\n    warnings,\n    setSpacer,\n    selectedTemplateOption,\n    updateSelectedTemplateOption,\n    updateSelectedPbsOption,\n    updateSelectedPe3Option,\n    updateSequencePredictions,\n    updatePegRNA,\n    updateSgRNA,\n    selectedSpacerOption,\n    setSelectedSpacerOption,\n  };\n}\n\nexport function useCleanWtSeq() {\n  const [cleanWtSeq, setCleanWtSeq] = useGlobalState('cleanWtSeq');\n  async function getCleanWtSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateCleanWtSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanWtSeq(sequence);\n  }\n  return {\n    cleanWtSeq,\n    getCleanWtSeq,\n  };\n}\nexport function useCleanMutSeq() {\n  const [cleanMutSeq, setCleanMutSeq] = useGlobalState('cleanMutSeq');\n  async function getCleanMutSeq(\n    wtSeq: string,\n    mut: string,\n    spacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    const { sequence } = await generateMutSeq(\n      wtSeq.toUpperCase(),\n      mut.toUpperCase(),\n      spacer.toUpperCase(),\n      pam.toUpperCase(),\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setCleanMutSeq(sequence);\n  }\n  return {\n    cleanMutSeq,\n    getCleanMutSeq,\n  };\n}\n\nexport function useWtSeq() {\n  const [wtSeq, setWtSeq] = useGlobalState('wtSeq');\n\n  return {\n    wtSeq,\n    setWtSeq,\n  };\n}\n\nexport function useMut() {\n  const [mut, setMut] = useGlobalState('mut');\n\n  return {\n    mut,\n    setMut,\n  };\n}\n\nexport function useCustomSpacer() {\n  const [customSpacer, setCustomSpacer] = useGlobalState('customSpacer');\n\n  return {\n    customSpacer,\n    setCustomSpacer,\n  };\n}\n\nexport function usePam() {\n  const [pam, setPam] = useGlobalState('pam');\n\n  return {\n    pam,\n    setPam,\n  };\n}\n\nexport function useMinPbs() {\n  const [minPbs, setMinPbs] = useGlobalState('minPbs');\n\n  return {\n    minPbs,\n    setMinPbs,\n  };\n}\n\nexport function useMaxPbs() {\n  const [maxPbs, setMaxPbs] = useGlobalState('maxPbs');\n\n  return {\n    maxPbs,\n    setMaxPbs,\n  };\n}\n\nexport function useMinRt() {\n  const [minRt, setMinRt] = useGlobalState('minRt');\n\n  return {\n    minRt,\n    setMinRt,\n  };\n}\n\nexport function useMaxRt() {\n  const [maxRt, setMaxRt] = useGlobalState('maxRt');\n\n  return {\n    maxRt,\n    setMaxRt,\n  };\n}\n\nexport function useSpacerOptions() {\n  const [spacerOptions, setSpacerOptions] = useGlobalState('spacerOptions');\n\n  return {\n    spacerOptions,\n    setSpacerOptions,\n  };\n}\n\nexport function usePegRNA() {\n  const [pegRNA, setPegRNA] = useGlobalState('pegRNA');\n\n  return {\n    pegRNA,\n    setPegRNA,\n  };\n}\n\nexport function usePe3sgRNA() {\n  const [pe3sgRNA, setPe3SgRNA] = useGlobalState('pe3sgRNA');\n\n  return {\n    pe3sgRNA,\n    setPe3SgRNA,\n  };\n}\n\nexport function useSpacerError() {\n  const [spacerError, setSpacerError] = useGlobalState('spacerError');\n  return {\n    spacerError,\n    setSpacerError,\n  };\n}\n\nexport function useStep() {\n  const [step, setStep] = useGlobalState('step');\n  return {\n    step,\n    setStep,\n  };\n}\n\nexport function useStep2Loading() {\n  const [step2Loading, setStep2Loading] = useGlobalState('step2Loading');\n  return {\n    step2Loading,\n    setStep2Loading,\n  };\n}\n\nexport function useStep3Loading() {\n  const [step3Loading, setStep3Loading] = useGlobalState('step3Loading');\n  return {\n    step3Loading,\n    setStep3Loading,\n  };\n}\nexport function useStep4Loading() {\n  const [step4Loading, setStep4Loading] = useGlobalState('step4Loading');\n  return {\n    step4Loading,\n    setStep4Loading,\n  };\n}\n\nexport function useStep5Loading() {\n  const [step5Loading, setStep5Loading] = useGlobalState('step5Loading');\n  return {\n    step5Loading,\n    setStep5Loading,\n  };\n}\n\nexport function useCloningStrategy() {\n  const [cloningStrategy, setCloningStrategy] = useGlobalState('cloningStrategy');\n  return {\n    cloningStrategy,\n    setCloningStrategy,\n  };\n}\n\nexport function useStep3Advanced() {\n  const [step3Advanced, setStep3Advanced] = useGlobalState('step3Advanced');\n  return {\n    step3Advanced,\n    setStep3Advanced,\n  };\n}","import React from 'react';\nimport { Step } from 'semantic-ui-react';\n\ntype Props = {\n  step: number;\n  vertical?: boolean;\n};\n\nconst onClickFactory = (step: number) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n  }\n};\n\nconst Steps = ({ step = 0, vertical = false }: Props) => (\n  <Step.Group ordered size=\"small\" vertical={vertical}>\n    <Step completed={step > 0} active={step === 0} onClick={onClickFactory(1)}>\n      <Step.Content>\n        <Step.Title>Start</Step.Title>\n        <Step.Description>Enter Sequence information</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 1}\n      active={step === 1}\n      disabled={step < 1}\n      onClick={onClickFactory(2)}\n    >\n      <Step.Content>\n        <Step.Title>Spacer</Step.Title>\n        <Step.Description>Select your spacer</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 2}\n      active={step === 2}\n      disabled={step < 2}\n      onClick={onClickFactory(3)}\n    >\n      <Step.Content>\n        <Step.Title>pegRNA</Step.Title>\n        <Step.Description>Design your pegRNA</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 3}\n      active={step === 3}\n      disabled={step < 3}\n      onClick={onClickFactory(4)}\n    >\n      <Step.Content>\n        <Step.Title>PE3</Step.Title>\n        <Step.Description>Choose a PE3 sequence</Step.Description>\n      </Step.Content>\n    </Step>\n\n    <Step\n      completed={step > 4}\n      active={step === 4}\n      disabled={step < 4}\n      onClick={onClickFactory(5)}\n    >\n      <Step.Content>\n        <Step.Title>Cloning</Step.Title>\n        <Step.Description>Choose your cloning strategy</Step.Description>\n      </Step.Content>\n    </Step>\n  </Step.Group>\n);\n\nexport default Steps;\n","import React, { SetStateAction } from 'react';\nimport { useStep } from '../../hooks';\nimport { Grid, Icon } from 'semantic-ui-react';\nimport AppSteps from '../AppSteps';\nimport StepsProgress from '../../components/StepsProgress';\n\nconst onClickFactory = (\n  step: number,\n  setStep: (u: SetStateAction<number>) => void,\n) => () => {\n  const target = document.getElementById(`step-${step}-container`);\n  if (target) {\n    target.scrollIntoView({ block: 'end', behavior: 'smooth' });\n    // setStep(step - 1);\n  }\n};\n\nconst steps = [\n  {\n    number: 1,\n    name: 'Start',\n    description: 'Enter Sequence information',\n  },\n  {\n    number: 2,\n    name: 'Spacer',\n    description: 'Select your spacer',\n  },\n  {\n    number: 3,\n    name: 'pegRNA',\n    description: 'Design your pegRNA',\n  },\n  {\n    number: 4,\n    name: 'PE3',\n    description: 'Choose a PE3 sequence',\n  },\n  {\n    number: 5,\n    name: 'Cloning',\n    description: 'Choose your cloning strategy',\n  },\n];\n\nconst SideMenu = () => {\n  const { step } = useStep();\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        paddingTop: 40,\n        top: 40,\n        left: 0,\n        width: 300,\n        height: 'calc(100vh - 40px)',\n        // backgroundColor: '#f3f4f5',\n        zIndex: 2,\n        // borderRight: '2px solid rgba(34,36,38,.15)',\n      }}\n    >\n      {/* {steps.map((menuStep) => (\n        <div\n          style={{\n            paddingLeft: 16,\n            margin: 0,\n            opacity: step >= menuStep.number - 1 ? 1 : 0.25,\n            cursor: step >= menuStep.number - 1 ? 'pointer' : 'arrow',\n            // borderBottom: '1px solid rgba(34,36,38,.15)',\n          }}\n          onClick={onClickFactory(menuStep.number, setStep)}\n        >\n          <div style={{ display: 'flex' }}>\n            <h4 style={{ margin: 0 }}>{menuStep.name}</h4>\n            {step > menuStep.number - 1 && (\n              <Icon name=\"check circle\" color=\"green\" />\n            )}\n          </div>\n        </div>\n      ))} */}\n      <div\n        style={{ display: 'flex', justifyContent: 'center', paddingLeft: 40 }}\n      >\n        <StepsProgress step={step} vertical />\n      </div>\n    </div>\n  );\n};\nexport default SideMenu;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSpacerError } from '../../hooks';\n\nconst SpacerError = () => {\n  const { spacerError } = useSpacerError();\n\n  return (\n    <Fragment>\n      {spacerError && (\n        <Message warning>\n          <MessageHeader>Error!</MessageHeader>\n          Looks like we couldn't predict any spacers for your sequence. You can\n          set a custom spacer in the advanced options\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default SpacerError;\n","import React, { Component, ChangeEvent, Fragment } from 'react';\nimport { Divider, Form, InputOnChangeData } from 'semantic-ui-react';\nimport SpacerError from './SpacerError';\n\nexport type SubmitFormState = {\n  wtSeq: string;\n  mut: string;\n  customSpacer: string;\n  pam: string;\n  minPbs: string;\n  maxPbs: string;\n  minRt: string;\n  maxRt: string;\n  showAdvanced: boolean;\n};\ntype Props = {\n  onSubmit: (\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) => Promise<void>;\n  loading: boolean;\n};\n\nclass SubmitForm extends Component<Props, SubmitFormState> {\n  state = {\n    wtSeq: '',\n    mut: '',\n    customSpacer: '',\n    pam: 'NGG',\n    minPbs: '8',\n    maxPbs: '18',\n    minRt: '9',\n    maxRt: '16',\n    showAdvanced: false,\n  };\n\n  handleChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) => {\n    this.setState((state) => {\n      const newState = {\n        ...state,\n        [name]: value,\n      };\n      this.calcRtRange(newState);\n      return newState;\n    });\n  };\n\n  handleRTChange = (\n    e: ChangeEvent<HTMLInputElement>,\n    { name, value }: InputOnChangeData,\n  ) =>\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n\n  handleSubmit = async () => {\n    // const { name, email } = this.state;\n    // this.setState({ submittedName: name, submittedEmail: email });\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    } = this.state;\n    this.props.onSubmit(\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      parseInt(minPbs),\n      parseInt(maxPbs),\n      parseInt(minRt),\n      parseInt(maxRt),\n    );\n  };\n\n  handleAdvancedToggle = (e: any) => {\n    e.preventDefault();\n    this.setState((state) => ({ showAdvanced: !state.showAdvanced }));\n  };\n\n  calcRtRange = (state: SubmitFormState) => {\n    const mutLength = state.mut.length;\n    let minRt = 9;\n    let maxRt = 16;\n    if (mutLength > 4) {\n      minRt = mutLength + 6;\n      maxRt = mutLength + 16;\n    }\n    if (mutLength > 8) {\n      minRt = mutLength + 8;\n      maxRt = mutLength + 22;\n    }\n    if (mutLength > 20) {\n      minRt = mutLength + 10;\n      maxRt = mutLength + 30;\n    }\n    this.setState(() => ({ minRt: minRt.toString(), maxRt: maxRt.toString() }));\n  };\n\n  render() {\n    const {\n      wtSeq,\n      mut,\n      customSpacer,\n      pam,\n      minRt,\n      maxRt,\n      minPbs,\n      maxPbs,\n      showAdvanced,\n    } = this.state;\n\n    return (\n      <div>\n        <SpacerError />\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Input\n            label=\"Wildtype sequence (parentheses around region to be mutated)\"\n            placeholder=\"\"\n            name=\"wtSeq\"\n            value={wtSeq}\n            onChange={this.handleChange}\n            required\n          />\n          <Form.Input\n            label=\"Mutation sequence (leave blank if performing deletion)\"\n            placeholder=\"\"\n            name=\"mut\"\n            value={mut}\n            onChange={this.handleChange}\n          />\n          {showAdvanced && (\n            <Fragment>\n              <h3>Advanced Options</h3>\n              <Divider />\n              <Form.Input\n                label=\"Custom PE spacer sequence\"\n                placeholder=\"\"\n                name=\"customSpacer\"\n                value={customSpacer}\n                onChange={this.handleChange}\n              />\n              <Form.Group>\n                <Form.Input\n                  label=\"Min PBS length\"\n                  placeholder=\"8\"\n                  name=\"minPbs\"\n                  value={minPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max PBS length\"\n                  placeholder=\"18\"\n                  name=\"maxPbs\"\n                  value={maxPbs}\n                  onChange={this.handleChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Min RT length\"\n                  placeholder=\"8\"\n                  name=\"minRt\"\n                  value={minRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n                <Form.Input\n                  label=\"Max RT length\"\n                  placeholder=\"18\"\n                  name=\"maxRt\"\n                  value={maxRt}\n                  onChange={this.handleRTChange}\n                  width=\"4\"\n                  required\n                />\n              </Form.Group>\n              <Form.Input\n                label=\"PAM sequence (use IUPAC ambiguity as needed)\"\n                placeholder=\"NGG\"\n                name=\"pam\"\n                value={pam}\n                onChange={this.handleChange}\n                width=\"6\"\n                required\n              />\n            </Fragment>\n          )}\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={this.props.loading} primary />\n            <Form.Button\n              content={`${showAdvanced ? 'Hide' : 'Show'} Advanced Options`}\n              onClick={this.handleAdvancedToggle}\n            />\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default SubmitForm;\n","import React from 'react';\nimport { generateSpacers } from '../../api';\nimport {\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useCustomSpacer,\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep2Loading,\n  useSpacerError,\n} from '../../hooks';\nimport { SpacerOption } from '../../types/presto';\nimport Step1Form from './Step1Form';\n\nconst Submit = () => {\n  const { setSpacer, setSelectedSpacerOption } = useSequencePredictions();\n  const { setWtSeq } = useWtSeq();\n  const { setMut } = useMut();\n  const { setCustomSpacer } = useCustomSpacer();\n  const { setPam } = usePam();\n  const { setMinPbs } = useMinPbs();\n  const { setMaxPbs } = useMaxPbs();\n  const { setMinRt } = useMinRt();\n  const { setMaxRt } = useMaxRt();\n  const { setStep } = useStep();\n  const { spacerOptions, setSpacerOptions } = useSpacerOptions();\n  const { setStep2Loading, step2Loading } = useStep2Loading();\n  const { setSpacerError } = useSpacerError();\n\n  async function onSubmit(\n    wtSeq: string,\n    mut: string,\n    customSpacer: string,\n    pam: string,\n    minPbs: number,\n    maxPbs: number,\n    minRt: number,\n    maxRt: number,\n  ) {\n    setStep2Loading(true);\n    let finalSpacerOptions: SpacerOption[] = [];\n\n    if (customSpacer !== '') {\n      setSpacer(customSpacer.toUpperCase());\n      const customSpacerOption = {\n        spacer: customSpacer.toUpperCase(),\n        cutToMut: null,\n        quality: null,\n      };\n      finalSpacerOptions = [customSpacerOption];\n      setSelectedSpacerOption(customSpacerOption);\n      setSpacerOptions([customSpacerOption]);\n    }\n\n    const apiSpacerOptions = await generateSpacers(wtSeq, mut, pam);\n    finalSpacerOptions = [\n      ...finalSpacerOptions,\n      ...spacerOptions,\n      ...apiSpacerOptions,\n    ];\n\n    if (finalSpacerOptions.length === 0) {\n      setSpacerError(true);\n      setStep2Loading(false);\n      return;\n    }\n\n    setSpacerError(false);\n\n    setSpacerOptions(finalSpacerOptions);\n    setSelectedSpacerOption(finalSpacerOptions[0]);\n\n    setWtSeq(wtSeq);\n    setMut(mut);\n    setCustomSpacer(customSpacer);\n    setSpacer(finalSpacerOptions[0].spacer);\n    setPam(pam);\n    setMinPbs(minPbs);\n    setMaxPbs(maxPbs);\n    setMinRt(minRt);\n    setMaxRt(maxRt);\n    setStep(1);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-2-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep2Loading(false);\n    }, 0);\n  }\n  return <Step1Form onSubmit={onSubmit} loading={step2Loading} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Segment, Grid } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step1 = () => {\n  const { step } = useStep();\n  return (\n    <Fragment>\n      <div style={{ height: 40 }}></div>\n      <Grid.Row>\n        <Grid.Column width={14}>\n          <div id=\"step-1-container\">\n            <Segment color={step === 0 ? 'grey' : undefined}>\n              <h2>Start</h2>\n              <Submit />\n            </Segment>\n          </div>\n        </Grid.Column>\n      </Grid.Row>\n    </Fragment>\n  );\n};\nexport default Step1;\n","import React, { Component, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\n\ntype Props = {\n  options: string[];\n  title: string;\n  onChange: (sequence: string) => void;\n};\n\nexport default class SequenceOptionsDropdown extends Component<Props> {\n  state = {\n    value: this.props.options.length > 0 ? this.props.options[0] : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    this.setState({ value });\n    this.props.onChange(value as string);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {this.props.title}\n        <Dropdown\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o,\n            text: o,\n            value: o,\n          }))}\n          placeholder=\"Choose an option\"\n          value={value}\n          selection\n          scrolling\n        />\n      </div>\n    );\n  }\n}\n","import React, { SetStateAction } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport {\n  useSequencePredictions,\n  useSpacerOptions,\n  useStep,\n  useStep3Loading,\n} from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst onChangeFactory = (\n  setSpacer: (u: SetStateAction<string>) => void,\n  setStep: (u: SetStateAction<number>) => void,\n  onSubmit: () => Promise<void>,\n  step: number,\n) => (sequence: string) => {\n  setSpacer(sequence);\n  if (step >= 2) {\n    setStep(1);\n    setTimeout(() => {\n      onSubmit();\n    }, 0);\n  }\n};\n\nconst Step2Form = ({ onSubmit }: Props) => {\n  const { spacerOptions } = useSpacerOptions();\n  const { setSpacer } = useSequencePredictions();\n  const { step3Loading } = useStep3Loading();\n  const { step, setStep } = useStep();\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <SequenceOptionsDropDown\n          title=\"\"\n          options={spacerOptions.map((o) => o.spacer)}\n          onChange={onChangeFactory(setSpacer, setStep, onSubmit, step)}\n        />\n        <div style={{ height: 15 }} />\n        <Form.Button content=\"Next\" loading={step3Loading} primary />\n      </Form>\n    </div>\n  );\n};\n\nexport default Step2Form;\n","import React from 'react';\nimport {\n  useSequencePredictions,\n  useCleanWtSeq,\n  useCleanMutSeq,\n  useStep,\n  useWtSeq,\n  useMut,\n  usePam,\n  useMinPbs,\n  useMaxPbs,\n  useMinRt,\n  useMaxRt,\n  useStep3Loading,\n} from '../../hooks';\nimport Step2Form from './Step2Form';\n\nconst Submit = () => {\n  const { updateSequencePredictions } = useSequencePredictions();\n  const { getCleanWtSeq } = useCleanWtSeq();\n  const { getCleanMutSeq } = useCleanMutSeq();\n  const { setStep } = useStep();\n\n  const { wtSeq } = useWtSeq();\n  const { mut } = useMut();\n  const { spacer } = useSequencePredictions();\n  const { pam } = usePam();\n  const { minPbs } = useMinPbs();\n  const { maxPbs } = useMaxPbs();\n  const { minRt } = useMinRt();\n  const { maxRt } = useMaxRt();\n  const { setStep3Loading } = useStep3Loading();\n\n  async function onSubmit() {\n    setStep3Loading(true);\n    getCleanWtSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    getCleanMutSeq(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n    await updateSequencePredictions(\n      wtSeq,\n      mut,\n      spacer,\n      pam,\n      minPbs,\n      maxPbs,\n      minRt,\n      maxRt,\n    );\n    setStep(2);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-3-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep3Loading(false);\n    }, 0);\n  }\n  return <Step2Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div id=\"step-2-container\">\n          <Segment color={step === 1 ? 'grey' : undefined}>\n            <h2>Spacer</h2>\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\n\ntype Props = {\n  label: string;\n  value: string | number | boolean;\n};\n\nconst renderValue = (value: string | number | boolean) => {\n  if (typeof value === 'boolean') {\n    return value ? 'True' : 'False';\n  }\n  return value || null;\n};\n\nconst Statistic = ({ label, value }: Props) => (\n  <p style={{ margin: 0 }}>\n    <b>{`${label}: `}</b>\n    {renderValue(value)}\n  </p>\n);\n\nexport default Statistic;\n","import React, { Fragment } from 'react';\nimport Statistic from './Statistic';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { TemplateOption } from '../../types/presto';\n\nconst onChangeFactory = (\n  updateSelectedTemplateOption: (option: TemplateOption) => void,\n  templateOptions: TemplateOption[],\n) => (value: string) => {\n  updateSelectedTemplateOption(\n    templateOptions.find((t) => t.rt === value) || templateOptions[0],\n  );\n};\n\nconst RTTemplates = () => {\n  const {\n    templateOptions,\n    updateSelectedTemplateOption,\n    selectedTemplateOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n\n  return (\n    <Fragment>\n      {templateOptions.length > 0 && (\n        <Fragment>\n          <SequenceOptionsDropDown\n            title=\"RT templates:\"\n            options={templateOptions.map((option) => option.rt)}\n            onChange={onChangeFactory(\n              updateSelectedTemplateOption,\n              templateOptions,\n            )}\n          />\n          {selectedTemplateOption && step3Advanced && (\n            <Fragment>\n              <div style={{ height: 15 }} />\n              <div>\n                {[\n                  { label: 'fhr', value: selectedTemplateOption.fhr },\n                  { label: 'fhrGC', value: selectedTemplateOption.fhrGC },\n                  {\n                    label: 'fhrLength',\n                    value: selectedTemplateOption.fhrLength,\n                  },\n                  { label: 'rtLength', value: selectedTemplateOption.rtLength },\n                  { label: 'rtPolyT', value: selectedTemplateOption.rtPolyT },\n                  { label: 'rtTM', value: selectedTemplateOption.rtTM },\n                ].map((o) => (\n                  <Statistic label={o.label} value={o.value} />\n                ))}\n              </div>\n            </Fragment>\n          )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default RTTemplates;\n\n// error: string;\n// fhr: string;\n// fhrGC: number;\n// fhrLength: number;\n// isDefault: boolean;\n// rt: string;\n// rtLength: number;\n// rtPolyT: boolean;\n// rtTM: number;\n// startsWithC: boolean;\n","import React, { Fragment } from 'react';\nimport SequenceOptionsDropDown from '../../components/SequenceOptionsDropDown';\nimport { useSequencePredictions, useStep3Advanced } from '../../hooks';\nimport { PBSOption } from '../../types/presto';\nimport Statistic from './Statistic';\n\nconst onChangeFactory = (\n  updateSelectedPbsOption: (option: PBSOption) => void,\n  PbsOptions: PBSOption[],\n) => (value: string) => {\n  updateSelectedPbsOption(\n    PbsOptions.find((p) => p.pbs === value) || PbsOptions[0],\n  );\n};\n\nconst PBSOptions = () => {\n  const {\n    pbsOptions,\n    updateSelectedPbsOption,\n    selectedPbsOption,\n  } = useSequencePredictions();\n  const { step3Advanced } = useStep3Advanced();\n  return (\n    <Fragment>\n      {pbsOptions.length > 0 && (\n        <SequenceOptionsDropDown\n          title=\"Primer binding sites:\"\n          options={pbsOptions.map((option) => option.pbs)}\n          onChange={onChangeFactory(updateSelectedPbsOption, pbsOptions)}\n        />\n      )}\n      {selectedPbsOption && step3Advanced && (\n        <Fragment>\n          <div style={{ height: 15 }} />\n          <div>\n            {[\n              { label: 'length', value: selectedPbsOption.length },\n              { label: 'pbsGC', value: selectedPbsOption.pbsGC },\n              {\n                label: 'pbsPolyT',\n                value: selectedPbsOption.pbsPolyT,\n              },\n              { label: 'pbsTM', value: selectedPbsOption.pbsTM },\n            ].map((o) => (\n              <Statistic label={o.label} value={o.value} />\n            ))}\n          </div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PBSOptions;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport RTTemplates from './RTTemplates';\nimport PBSOptions from './PBSOptions';\nimport { useStep4Loading, useStep3Advanced } from '../../hooks';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst handleAdvancedToggleFactory = (\n  step3Advanced: boolean,\n  setStep3Advanced: (u: React.SetStateAction<boolean>) => void,\n) => (e: any) => {\n  e.preventDefault();\n  setStep3Advanced(!step3Advanced);\n};\n\nconst Step3Form = ({ onSubmit }: Props) => {\n  const { step4Loading } = useStep4Loading();\n  const { step3Advanced, setStep3Advanced } = useStep3Advanced();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <div style={{ flexGrow: 1, paddingRight: '7px' }}>\n              <RTTemplates />\n            </div>\n            <div style={{ flexGrow: 1, paddingLeft: '7px' }}>\n              <PBSOptions />\n            </div>\n          </div>\n          <div style={{ height: 15 }} />\n\n          <Form.Group>\n            <Form.Button content=\"Next\" loading={step4Loading} primary />\n            <Form.Button\n              content={`${step3Advanced ? 'Hide' : 'Show'} Details`}\n              onClick={handleAdvancedToggleFactory(\n                step3Advanced,\n                setStep3Advanced,\n              )}\n            />\n          </Form.Group>\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step3Form;\n","import React from 'react';\nimport { useStep, useStep4Loading } from '../../hooks';\nimport Step3Form from './Step3Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep4Loading } = useStep4Loading();\n\n  async function onSubmit() {\n    setStep(3);\n    setStep4Loading(true);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-4-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n        setStep4Loading(false);\n      }\n    }, 0);\n  }\n  return <Step3Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst PegRNAWarnings = () => {\n  const {\n    warnings: { general, pegRna },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pegRna];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNAWarnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport PegRNAWarnings from './PegRNAWarnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div id=\"step-3-container\">\n          <Segment color={step === 2 ? 'grey' : undefined}>\n            <h2>pegRNA</h2>\n            <PegRNAWarnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import { useSequencePredictions } from '../../hooks';\nimport React, { Component, Fragment, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { PE3Option } from '../../types/presto';\nimport { API_ROOT } from '../../config';\n\ntype Props = {\n  options: PE3Option[];\n  title: string;\n  onChange: (value: PE3Option) => void;\n};\n\n// class PE3OptionsDropdown extends Component<Props> {\n//   state = {\n//     value:\n//       this.props.options.length > 0\n//         ? this.props.options[0]\n//         : { secondGuide: '', type: 'pe3' },\n//   };\n//   static defaultProps = { options: [], onChange: (_: PE3Option) => {} };\n//   handleChange = (\n//     _: SyntheticEvent<HTMLElement, Event>,\n//     { value }: DropdownItemProps,\n//   ) => {\n//     const selectedOption = this.props.options.filter(\n//       (o) => o.secondGuide === value,\n//     )[0];\n//     this.setState({ value: selectedOption });\n//     this.props.onChange(selectedOption);\n//   };\n\n//   render() {\n//     const { value } = this.state;\n\n//     return (\n//       <div style={{ display: 'flex', flexDirection: 'column' }}>\n//         {this.props.title}\n//         <Dropdown placeholder=\"Choose an option\" text={value.secondGuide}>\n//           <Dropdown.Menu scrolling onChange={this.handleChange}>\n//             {this.props.options.map((o) => (\n//               <Dropdown.Item\n//                 label={{\n//                   color: o.type === 'pe3b' ? 'green' : undefined,\n//                   content: o.type === 'pe3b' ? 'PE3B' : 'PE3',\n//                 }}\n//                 key={o.secondGuide}\n//                 text={o.secondGuide}\n//                 value={o.secondGuide}\n//                 onClick={this.handleChange}\n//               />\n//             ))}\n//           </Dropdown.Menu>\n//         </Dropdown>\n//       </div>\n//     );\n//   }\n// }\n\nclass PE3OptionsDropdownAvatar extends Component<Props> {\n  state = {\n    value:\n      this.props.options.length > 0 ? this.props.options[0].secondGuide : '',\n  };\n  static defaultProps = { options: [], onChange: (_: string) => {} };\n  handleChange = (\n    _: SyntheticEvent<HTMLElement, Event>,\n    { value }: DropdownProps,\n  ) => {\n    const selectedOption = this.props.options.filter(\n      (o) => o.secondGuide === value,\n    )[0];\n    this.setState({ value: selectedOption.secondGuide });\n    this.props.onChange(selectedOption);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        {this.props.title}\n        <Dropdown\n          placeholder=\"Choose an option\"\n          onChange={this.handleChange}\n          options={this.props.options.map((o) => ({\n            key: o.secondGuide,\n            text: o.secondGuide,\n            value: o.secondGuide,\n            image: {\n              avatar: true,\n              src:\n                o.type === 'pe3'\n                  ? `${API_ROOT}/images/pe3pill.png`\n                  : `${API_ROOT}/images/pe3bpill.png`,\n            },\n          }))}\n          value={value}\n          selection\n          scrolling\n        ></Dropdown>\n      </div>\n    );\n  }\n}\n\nconst PE3Options = () => {\n  const { pe3Options, updateSelectedPe3Option } = useSequencePredictions();\n  return (\n    <Fragment>\n      {pe3Options.length > 0 && (\n        <PE3OptionsDropdownAvatar\n          title=\"PE3 Guides:\"\n          options={pe3Options}\n          onChange={updateSelectedPe3Option}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default PE3Options;\n","import React from 'react';\nimport { Form, Grid } from 'semantic-ui-react';\nimport { useStep5Loading } from '../../hooks';\nimport PE3Options from './PE3Options';\n\ntype Props = {\n  onSubmit: () => Promise<void>;\n};\n\nconst Step4Form = ({ onSubmit }: Props) => {\n  const { step5Loading } = useStep5Loading();\n  return (\n    <div>\n      <Grid.Row>\n        <Form onSubmit={onSubmit}>\n          <PE3Options />\n          <div style={{ height: 15 }} />\n          <Form.Button content=\"Next\" loading={step5Loading} primary />\n        </Form>\n      </Grid.Row>\n    </div>\n  );\n};\n\nexport default Step4Form;\n","import React from 'react';\nimport { useStep, useStep5Loading } from '../../hooks';\nimport Step4Form from './Step4Form';\n\nconst Submit = () => {\n  const { setStep } = useStep();\n  const { setStep5Loading } = useStep5Loading();\n\n  async function onSubmit() {\n    setStep(4);\n    setStep5Loading(true);\n\n    setTimeout(() => {\n      const nextStep = document.getElementById('step-5-container');\n      if (nextStep) {\n        nextStep.scrollIntoView({ behavior: 'smooth' });\n      }\n      setStep5Loading(false);\n    }, 1000);\n  }\n  return <Step4Form onSubmit={onSubmit} />;\n};\nexport default Submit;\n","import React, { Fragment } from 'react';\nimport { Message, MessageHeader } from 'semantic-ui-react';\nimport { useSequencePredictions } from '../../hooks';\n\nconst Pe3Warnings = () => {\n  const {\n    warnings: { general, pe3 },\n  } = useSequencePredictions();\n  const warnings = [...general, ...pe3];\n\n  return (\n    <Fragment>\n      {warnings.length > 0 && (\n        <Message warning>\n          <MessageHeader>Warning!</MessageHeader>\n          {warnings.map((warning, i) => (\n            <p key={`warning-${i}`}>{warning}</p>\n          ))}\n        </Message>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pe3Warnings;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport Submit from './Submit';\nimport Pe3Warnings from './Pe3Warnings';\n\nconst Step2 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div id=\"step-4-container\">\n          <Segment color={step === 3 ? 'grey' : undefined}>\n            <h2>PE3</h2>\n            <Pe3Warnings />\n            <Submit />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step2;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\nimport { generateCSV } from '../../api';\nimport { useSequencePredictions } from '../../hooks';\n\nconst FullResultsButton = () => {\n  const {\n    wtSeq,\n    mut,\n    spacer,\n    pam,\n    minPbs,\n    maxPbs,\n    minRt,\n    maxRt,\n  } = useSequencePredictions();\n  const handleClick = () =>\n    generateCSV(wtSeq, mut, spacer, pam, minPbs, maxPbs, minRt, maxRt);\n  return (\n    <Button onClick={handleClick} primary>\n      Donwnload Full Results\n    </Button>\n  );\n};\n\nexport default FullResultsButton;\n","import React, { Component } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport copy from 'copy-to-clipboard';\n\nconst DEFAULT_HELP_TEXT = 'click to copy';\nconst SUCCESS_HELP_TEXT = \"you're all set\";\ntype Props = {\n  value: string | undefined;\n};\n\nclass Copy extends Component<Props> {\n  state = {\n    helpText: DEFAULT_HELP_TEXT,\n    isOpen: false,\n  };\n  handleCopy = () => {\n    if (this.props.value) {\n      copy(this.props.value);\n      this.setState(() => ({ helpText: SUCCESS_HELP_TEXT }));\n      console.log('indicate');\n      setTimeout(() => {\n        this.setState(() => ({ helpText: DEFAULT_HELP_TEXT }));\n      }, 1000);\n    }\n  };\n\n  handleMouseOver = () => {\n    this.setState(() => ({ isOpen: true }));\n  };\n  handleMouseLeave = () => {\n    this.setState(() => ({ isOpen: false }));\n  };\n\n  render() {\n    return (\n      <Popup\n        content={this.state.helpText}\n        position=\"top center\"\n        open={this.state.isOpen}\n        trigger={\n          <Icon\n            name=\"copy\"\n            onClick={this.handleCopy}\n            onMouseOver={this.handleMouseOver}\n            onMouseLeave={this.handleMouseLeave}\n            link\n          />\n        }\n      />\n    );\n  }\n}\n\nexport default Copy;\n","import React, { Component, SetStateAction, SyntheticEvent } from 'react';\nimport { Dropdown, DropdownProps } from 'semantic-ui-react';\nimport { useCloningStrategy } from '../../hooks';\n\nconst options = ['Richardson', 'None'].map((o) => ({\n  key: o,\n  text: o,\n  value: o,\n}));\n\nconst handleChangeFactory = (\n  setCloningStrategy: (u: SetStateAction<string>) => void,\n) => (_: SyntheticEvent<HTMLElement, Event>, { value }: DropdownProps) => {\n  setCloningStrategy(value as string);\n};\n\nconst CloningStrategyDropdown = () => {\n  const { setCloningStrategy } = useCloningStrategy();\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column' }}>\n      Cloning strategy\n      <Dropdown\n        onChange={handleChangeFactory(setCloningStrategy)}\n        options={options}\n        placeholder=\"Choose an option\"\n        selection\n        scrolling\n        defaultValue={options[0].value}\n      />\n    </div>\n  );\n};\n\nexport default CloningStrategyDropdown;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { useCloningStrategy, usePegRNA } from '../../hooks';\nimport { FinalPegRNAAnnotation } from '../../types/presto';\nimport CloningStrategyDropdown from './CloningStrategyDropdown';\n\nfunction uniqBy(\n  a: Array<FinalPegRNAAnnotation>,\n  key: (o: FinalPegRNAAnnotation) => any,\n) {\n  let seen = new Set();\n  return a.filter((item) => {\n    let k = key(item);\n    return seen.has(k) ? false : seen.add(k);\n  });\n}\n\nconst getSequence = (annotations: FinalPegRNAAnnotation[]) =>\n  annotations.map((a) => a.sequence).join('');\n\nconst getCloningStrategyAnnotations = (\n  annotations: FinalPegRNAAnnotation[],\n  cloningStrategy: string,\n) =>\n  annotations.filter((a) =>\n    cloningStrategy === 'None'\n      ? ['rtt', 'pbs', 'spacer'].includes(a.name)\n      : true,\n  );\n\nconst PegRNA = () => {\n  const { pegRNA } = usePegRNA();\n  const { cloningStrategy } = useCloningStrategy();\n  const annotations = uniqBy(\n    getCloningStrategyAnnotations(\n      pegRNA?.annotations || ([] as FinalPegRNAAnnotation[]),\n      cloningStrategy,\n    ),\n    (a: FinalPegRNAAnnotation) => a.name,\n  );\n\n  return (\n    <Fragment>\n      <CloningStrategyDropdown />\n      {pegRNA && (\n        <div style={{ marginTop: 30 }}>\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\n              Final pegRNA:\n              <Copy\n                value={getSequence(\n                  getCloningStrategyAnnotations(\n                    pegRNA.annotations,\n                    cloningStrategy,\n                  ),\n                )}\n              />\n              <div style={{ display: 'flex', position: 'absolute', right: 12 }}>\n                {annotations.map((annotation) => (\n                  <div style={{ display: 'flex' }}>\n                    <div\n                      style={{\n                        width: 19,\n                        height: 19,\n                        backgroundColor: annotation.color,\n                        borderRadius: 5,\n                      }}\n                    ></div>\n                    <span style={{ marginLeft: 2, marginRight: 10 }}>\n                      {annotation.name}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <p style={{ wordBreak: 'break-word', marginTop: 10 }}>\n              {getCloningStrategyAnnotations(\n                pegRNA.annotations,\n                cloningStrategy,\n              ).map((annotation) => (\n                <span\n                  style={{\n                    backgroundColor: annotation.color,\n                    padding: '0 5px',\n                    borderRadius: 5,\n                  }}\n                >\n                  {annotation.sequence}\n                </span>\n              ))}\n            </p>\n          </div>\n          {/* <SeqViz\n            name=\"pegRNA\"\n            seq={pegRNA.sequence}\n            viewer=\"circular\"\n            annotations={annotations}\n            showComplement={false}\n            style={{ height: '300px', width: '100%' }}\n            zoom={{\n              linear: 50,\n            }}\n          /> */}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PegRNA;\n","import React, { Fragment } from 'react';\nimport Copy from '../../components/Copy';\nimport { usePe3sgRNA, useSequencePredictions } from '../../hooks';\n\nconst Pe3sgRNA = () => {\n  const { pe3Options } = useSequencePredictions();\n  const { pe3sgRNA } = usePe3sgRNA();\n\n  return (\n    <div>\n      {pe3Options.length > 0 && (\n        <Fragment>\n          <div style={{ flexGrow: 1 }}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                sense PE3 guide:\n                <Copy value={pe3sgRNA.sense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.sense}</p>\n            </div>\n          </div>\n          <div style={{ height: 15 }} />\n          <div style={{ flexGrow: 1 }}>\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\n              <div>\n                antisense PE3 guide:\n                <Copy value={pe3sgRNA.antisense} />\n              </div>\n              <p style={{ wordBreak: 'break-word' }}>{pe3sgRNA.antisense}</p>\n            </div>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Pe3sgRNA;\n","import React from 'react';\nimport { Grid, Segment } from 'semantic-ui-react';\nimport { useStep } from '../../hooks';\nimport FullResultsButton from './FullResultsButton';\nimport PegRNA from './PegRNA';\nimport Pe3sgRNA from './Pe3sgRNA';\n\nconst Step5 = () => {\n  const { step } = useStep();\n  return (\n    <Grid.Row>\n      <Grid.Column width={14}>\n        <div id=\"step-5-container\" style={{ marginBottom: 40 }}>\n          <Segment color={step === 4 ? 'grey' : undefined}>\n            <h2>Cloning</h2>\n            <PegRNA />\n            <div style={{ height: 15 }} />\n            <Pe3sgRNA />\n            <div style={{ height: 15 }} />\n            <FullResultsButton />\n          </Segment>\n        </div>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\nexport default Step5;\n","import React from 'react';\nimport AppMenu from './AppMenu';\nimport SideMenu from './SideMenu';\nimport { Grid } from 'semantic-ui-react';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { useStep } from '../hooks';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Steps from './AppSteps';\n\nfunction App() {\n  const { step } = useStep();\n\n  return (\n    <div\n      style={{\n        width: '100vw',\n        height: '100vh',\n        position: 'relative',\n        overflow: 'hidden',\n      }}\n    >\n      <AppMenu />\n\n      {/* <Steps /> */}\n      <SideMenu />\n      <div\n        style={{\n          width: 'calc(100vw - 300px)',\n          position: 'absolute',\n          top: 40,\n          left: 300,\n          height: 'calc(100vh - 40px)',\n          overflowX: 'hidden',\n          overflowY: 'auto',\n        }}\n      >\n        <Grid centered>\n          <Step1 />\n          {step >= 1 && <Step2 />}\n          {step >= 2 && <Step3 />}\n          {step >= 3 && <Step4 />}\n          {step >= 4 && <Step5 />}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}